{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Material das aulas do IFPR","title":"Material das aulas do IFPR"},{"location":"#material-das-aulas-do-ifpr","text":"","title":"Material das aulas do IFPR"},{"location":"ADS/","text":"An\u00e1lise e desenvolvimento de sistemas","title":"An\u00e1lise e desenvolvimento de sistemas"},{"location":"ADS/#analise-e-desenvolvimento-de-sistemas","text":"","title":"An\u00e1lise e desenvolvimento de sistemas"},{"location":"ADS/2021/redes2/27-utilizando_chaves_no_ssh/","text":"Utilizando chaves no SSH Vamos criar uma chave para utilizarmos no SSH, dessa forma podemos conectar com m\u00e1quinas sem precisar colocar a senha. Os comandos s\u00e3o para o linux, mas funcionam no windows 10. Criando a chave Primeiro vamos criar uma chave assim\u00e9trica para utilizarmos, vamos fazer isso com o comando ssh-keygen : ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" Essa chave vai ser criada na pasta sua pasta .ssh na pasta do seu usu\u00e1rio. \u00c9 s\u00f3 ir seguindo as instru\u00e7\u00f5es que v\u00e3o aparecendo no terminal. Para que a chave seja utilizada pelo cliente do SSH, temos que cadastrar ela utilizando o comando ssh-add com a chave privada como par\u00e2metro. Se voc\u00ea rodou o comando com os valores padr\u00f5es, vai ser o comando abaixo: eval \"$(ssh-agent -s)\" ssh-add ~/.ssh/id_rsa Adicionando em um servidor Agora temos que cadastrar a sua chave p\u00fablica onde queremos que essa m\u00e1quina se conecte sem senha. Pode ser em outra m\u00e1quina que tenho o servidor de SSH ou no github. Para fazer em outra m\u00e1quina, vamos fazer ssh nela(com senha ainda) e cadastrar a chave p\u00fablica. Para isso, vamos escolher o usu\u00e1rio que queremos que seja utilizado no SSH e na pasta de usu\u00e1rio dele criar uma pasta .ssh (se n\u00e3o existir) e um arquivo authorized_keys (se n\u00e3o existir). mkdir .ssh cd .ssh touch authorized_keys Nesse arquivo vamos colocar o conte\u00fado da chave p\u00fablica que geramos (id_rsa.pub) e salvar. Depois disso, a conex\u00e3o ssh do nosso pc para o outro utilizando esse usu\u00e1rio n\u00e3o vai precisar de senha para funcionar. Refer\u00eancia: GitHub","title":"Utilizando chaves no SSH"},{"location":"ADS/2021/redes2/27-utilizando_chaves_no_ssh/#utilizando-chaves-no-ssh","text":"Vamos criar uma chave para utilizarmos no SSH, dessa forma podemos conectar com m\u00e1quinas sem precisar colocar a senha. Os comandos s\u00e3o para o linux, mas funcionam no windows 10.","title":"Utilizando chaves no SSH"},{"location":"ADS/2021/redes2/27-utilizando_chaves_no_ssh/#criando-a-chave","text":"Primeiro vamos criar uma chave assim\u00e9trica para utilizarmos, vamos fazer isso com o comando ssh-keygen : ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" Essa chave vai ser criada na pasta sua pasta .ssh na pasta do seu usu\u00e1rio. \u00c9 s\u00f3 ir seguindo as instru\u00e7\u00f5es que v\u00e3o aparecendo no terminal. Para que a chave seja utilizada pelo cliente do SSH, temos que cadastrar ela utilizando o comando ssh-add com a chave privada como par\u00e2metro. Se voc\u00ea rodou o comando com os valores padr\u00f5es, vai ser o comando abaixo: eval \"$(ssh-agent -s)\" ssh-add ~/.ssh/id_rsa","title":"Criando a chave"},{"location":"ADS/2021/redes2/27-utilizando_chaves_no_ssh/#adicionando-em-um-servidor","text":"Agora temos que cadastrar a sua chave p\u00fablica onde queremos que essa m\u00e1quina se conecte sem senha. Pode ser em outra m\u00e1quina que tenho o servidor de SSH ou no github. Para fazer em outra m\u00e1quina, vamos fazer ssh nela(com senha ainda) e cadastrar a chave p\u00fablica. Para isso, vamos escolher o usu\u00e1rio que queremos que seja utilizado no SSH e na pasta de usu\u00e1rio dele criar uma pasta .ssh (se n\u00e3o existir) e um arquivo authorized_keys (se n\u00e3o existir). mkdir .ssh cd .ssh touch authorized_keys Nesse arquivo vamos colocar o conte\u00fado da chave p\u00fablica que geramos (id_rsa.pub) e salvar. Depois disso, a conex\u00e3o ssh do nosso pc para o outro utilizando esse usu\u00e1rio n\u00e3o vai precisar de senha para funcionar. Refer\u00eancia: GitHub","title":"Adicionando em um servidor"},{"location":"ADS/2021/web1/19%20-%20javascript1/","text":"19 - Primeiro exemplo de JavaScript Primeiro exemplo em c\u00f3digo Primeiro temos que saber que a nossa p\u00e1gina \u00e9 representada por um objeto chamado document , e vamos utilizar ele para pegar os elementos do html e mudar as suas informa\u00e7\u00f5es. Vamos come\u00e7ar criando uma p\u00e1gina simples e colocando um t\u00edtulo nela nela. Copie o c\u00f3digo abaixo no arquivo \"index.html\" em uma pasta vazia e abra no vscode. <!DOCTYPE html> <html> <head> <title>Meu site com js</title> </head> <body> <h1></h1> <p></p> </body> </html> Vamos utilizar o JavaScript para mexer com algumas coisas na nossa p\u00e1gina. Mas vamos separar ele em outro arquivo. Vamos criar uma pasta chamada scripts e criar um arquivo chamado main.js dentro dela. Nesse arquivo vamos colocar o c\u00f3digo abaixo: let meuCabecalho = document.querySelector('h1'); meuCabecalho.textContent = 'Ola mundo!'; Abra o arquivo index.html em algum navegador, e voc\u00ea ver\u00e1 que o t\u00edtulo ainda est\u00e1 vazio. Isso aconteceu por que, assim como o css, o JavaScript precisa ser importado no HTML. Para isso utilizamos a tag \\<script> dentro da body (no css utilizamos a tag \\<link>). Ent\u00e3o vamos colocar esse c\u00f3digo abaixo na linha antes da tag \\</body>: <script src=\"scripts/main.js\"></script> Salve os arquivos e tente recarregar eles no navegador. Se tudo der certo, voc\u00ea ver\u00e1 uma p\u00e1gina com o t\u00edtulo \"Ola mundo!\". Rodando o JavaScript no navegador O JavaScript pode ser rodado direto no navegador. Vamos utilizar o Chrome para isso, mas esse processo funciona em outros navegadores. No navegador onde voc\u00ea abriu o HTML que acabou de criar, aperte F12 para abrir as ferramentas de desenvolvedor. Procure uma aba chamada console e clicke nela. No console digite esse c\u00f3digo em JS: meuCabecalho.style.color = 'blue'; Aperte enter e a cor do texto vai mudar para azul. O meuCabecalho vai existir nesse terminal por que ele foi criado pelo main.js quando a p\u00e1gina foi carregada. Podemos utilizar o document nesse terminal para pegar outros elementos da p\u00e1gina. Como \u00faltimo teste, vamos criar um alert na nossa p\u00e1gina digitando esse c\u00f3digo no terminal: alert(\"funcionou\") Aparecer\u00e1 um alerta na tela como o da figura abaixo:","title":"19 - Primeiro exemplo de JavaScript"},{"location":"ADS/2021/web1/19%20-%20javascript1/#19-primeiro-exemplo-de-javascript","text":"","title":"19 - Primeiro exemplo de JavaScript"},{"location":"ADS/2021/web1/19%20-%20javascript1/#primeiro-exemplo-em-codigo","text":"Primeiro temos que saber que a nossa p\u00e1gina \u00e9 representada por um objeto chamado document , e vamos utilizar ele para pegar os elementos do html e mudar as suas informa\u00e7\u00f5es. Vamos come\u00e7ar criando uma p\u00e1gina simples e colocando um t\u00edtulo nela nela. Copie o c\u00f3digo abaixo no arquivo \"index.html\" em uma pasta vazia e abra no vscode. <!DOCTYPE html> <html> <head> <title>Meu site com js</title> </head> <body> <h1></h1> <p></p> </body> </html> Vamos utilizar o JavaScript para mexer com algumas coisas na nossa p\u00e1gina. Mas vamos separar ele em outro arquivo. Vamos criar uma pasta chamada scripts e criar um arquivo chamado main.js dentro dela. Nesse arquivo vamos colocar o c\u00f3digo abaixo: let meuCabecalho = document.querySelector('h1'); meuCabecalho.textContent = 'Ola mundo!'; Abra o arquivo index.html em algum navegador, e voc\u00ea ver\u00e1 que o t\u00edtulo ainda est\u00e1 vazio. Isso aconteceu por que, assim como o css, o JavaScript precisa ser importado no HTML. Para isso utilizamos a tag \\<script> dentro da body (no css utilizamos a tag \\<link>). Ent\u00e3o vamos colocar esse c\u00f3digo abaixo na linha antes da tag \\</body>: <script src=\"scripts/main.js\"></script> Salve os arquivos e tente recarregar eles no navegador. Se tudo der certo, voc\u00ea ver\u00e1 uma p\u00e1gina com o t\u00edtulo \"Ola mundo!\".","title":"Primeiro exemplo em c\u00f3digo"},{"location":"ADS/2021/web1/19%20-%20javascript1/#rodando-o-javascript-no-navegador","text":"O JavaScript pode ser rodado direto no navegador. Vamos utilizar o Chrome para isso, mas esse processo funciona em outros navegadores. No navegador onde voc\u00ea abriu o HTML que acabou de criar, aperte F12 para abrir as ferramentas de desenvolvedor. Procure uma aba chamada console e clicke nela. No console digite esse c\u00f3digo em JS: meuCabecalho.style.color = 'blue'; Aperte enter e a cor do texto vai mudar para azul. O meuCabecalho vai existir nesse terminal por que ele foi criado pelo main.js quando a p\u00e1gina foi carregada. Podemos utilizar o document nesse terminal para pegar outros elementos da p\u00e1gina. Como \u00faltimo teste, vamos criar um alert na nossa p\u00e1gina digitando esse c\u00f3digo no terminal: alert(\"funcionou\") Aparecer\u00e1 um alerta na tela como o da figura abaixo:","title":"Rodando o JavaScript no navegador"},{"location":"ADS/2021/web1/20-javascript_utilizando_propriedade_id/","text":"20 - Encontrando componentes no JS Nessa aula vamos ver outras formas de encontrar componentes do html com o JS. A propriedade id Os elementos do html possui um atributo chamado id que \u00e9 utilizado para identificar um elemento individualmente. O id n\u00e3o deve se repetir no html. O id pode ser utilizado tanto pelo javascript, quanto pelo CSS. No CSS vamos criar a declara\u00e7\u00e3o com um # antes do nome do id. #meuCabecalho { background-color: lightblue; color: black; } Diferen\u00e7a entre o class e o id A mesma classe pode ser utilizada por diversos elementos, j\u00e1 o id deve ser \u00fanico (n\u00e3o deve ser repetir) no documento. Encontrando os elementos Podemos encontrar os elementos pelo seu id, sua classe ou sua tag. M\u00e9todo Descri\u00e7\u00e3o document.getElementById(id) Encontra o elemento pelo id document.getElementsByTagName(name) Encontra os elementos com a tag document.getElementsByClassName(name) Encontra os elementos pelo nome da classe Nos elementos podemos alterar seu html, seus atributos e seu estilo com os seguintes m\u00e9todos: M\u00e9todo Descri\u00e7\u00e3o element.innerHTML = new html content Muda o HTMl de um elemento element.attribute = new value Muda o valor de um atributo do elemento element.style.property = new style Muda o estilo do elemento","title":"20 - Encontrando componentes no JS"},{"location":"ADS/2021/web1/20-javascript_utilizando_propriedade_id/#20-encontrando-componentes-no-js","text":"Nessa aula vamos ver outras formas de encontrar componentes do html com o JS.","title":"20 - Encontrando componentes no JS"},{"location":"ADS/2021/web1/20-javascript_utilizando_propriedade_id/#a-propriedade-id","text":"Os elementos do html possui um atributo chamado id que \u00e9 utilizado para identificar um elemento individualmente. O id n\u00e3o deve se repetir no html. O id pode ser utilizado tanto pelo javascript, quanto pelo CSS. No CSS vamos criar a declara\u00e7\u00e3o com um # antes do nome do id. #meuCabecalho { background-color: lightblue; color: black; }","title":"A propriedade id"},{"location":"ADS/2021/web1/20-javascript_utilizando_propriedade_id/#diferenca-entre-o-class-e-o-id","text":"A mesma classe pode ser utilizada por diversos elementos, j\u00e1 o id deve ser \u00fanico (n\u00e3o deve ser repetir) no documento.","title":"Diferen\u00e7a entre o class e o id"},{"location":"ADS/2021/web1/20-javascript_utilizando_propriedade_id/#encontrando-os-elementos","text":"Podemos encontrar os elementos pelo seu id, sua classe ou sua tag. M\u00e9todo Descri\u00e7\u00e3o document.getElementById(id) Encontra o elemento pelo id document.getElementsByTagName(name) Encontra os elementos com a tag document.getElementsByClassName(name) Encontra os elementos pelo nome da classe Nos elementos podemos alterar seu html, seus atributos e seu estilo com os seguintes m\u00e9todos: M\u00e9todo Descri\u00e7\u00e3o element.innerHTML = new html content Muda o HTMl de um elemento element.attribute = new value Muda o valor de um atributo do elemento element.style.property = new style Muda o estilo do elemento","title":"Encontrando os elementos"},{"location":"ADS/2021/web1/21-eventos_javascript_botao/","text":"21 - Eventos com JS Nessa aula vamos ver o que s\u00e3o eventos e como utilizar eles para deixar a nossa p\u00e1gina mais din\u00e2mica. Eventos Os elementos do HTML possuem eventos, eles s\u00e3o chamados quando alguma a\u00e7\u00e3o acontece (ex: o mouse passa por cima do elemento) e podemos colocar c\u00f3digo em javascript para ser executado. Normalmente vamos utilizar fun\u00e7\u00f5es para organizar e reaproveitar o nosso c\u00f3digo. Exemplo de eventos: link Lista de eventos: link Exemplo Vamos criar um card de venda de produtos que quando o usu\u00e1rio retira o mouse do bot\u00e3o de compra, ele muda o texto. Vamos come\u00e7ar criando o html. <!DOCTYPE html> <html> <head> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\"> <script type=\"text/javascript\" src=\"scripts/compra.js\"></script> </head> <body> <div class=\"card\" style=\"width: 18rem;\"> <div class=\"card\" style=\"width: 18rem;\"> <img class=\"card-img-top\" src=\"imgs/produto.jpg\" alt=\"Card image cap\"> <div class=\"card-body\"> <h5 class=\"card-title\">Produto muito bom mesmo</h5> <p class=\"card-text\">Um produto fenomenal que vai pirar seu cabe\u00e7\u00e3o.</p> <a href=\"#\" class=\"btn btn-primary\" onmouseout=\"naoDesista()\" onmouseover=\"ultimasUnidades()\">Comprar</a> </div> </div> </body> </html> Na mesma pasta dele cria as pastas scripts e imgs e coloque uma imagem para completar o seu card como nessa imagem. Na pasta scripts vamos criar o arquivo compra.js e nele vamos criar duas fun\u00e7\u00f5es, uma para ser chamada quando o usu\u00e1rio tirar o mouse do bot\u00e3o de compra (naoDesista) e outro para quando ele colocar o mouse sobre o bot\u00e3o (ultimasUnidades). function naoDesista(e) { e = e || window.event; var target = e.target || e.srcElement; target.textContent = \"N\u00e3o v\u00e1 embora\" } function ultimasUnidades(e) { e = e || window.event; var target = e.target || e.srcElement; target.textContent = \"Nosso estoque est\u00e1 acabando, compre agora!!!\" } Quando o mouse entrar ou sair do bot\u00e3o, o texto do bot\u00e3o vai mudar.","title":"21 - Eventos com JS"},{"location":"ADS/2021/web1/21-eventos_javascript_botao/#21-eventos-com-js","text":"Nessa aula vamos ver o que s\u00e3o eventos e como utilizar eles para deixar a nossa p\u00e1gina mais din\u00e2mica.","title":"21 - Eventos com JS"},{"location":"ADS/2021/web1/21-eventos_javascript_botao/#eventos","text":"Os elementos do HTML possuem eventos, eles s\u00e3o chamados quando alguma a\u00e7\u00e3o acontece (ex: o mouse passa por cima do elemento) e podemos colocar c\u00f3digo em javascript para ser executado. Normalmente vamos utilizar fun\u00e7\u00f5es para organizar e reaproveitar o nosso c\u00f3digo. Exemplo de eventos: link Lista de eventos: link","title":"Eventos"},{"location":"ADS/2021/web1/21-eventos_javascript_botao/#exemplo","text":"Vamos criar um card de venda de produtos que quando o usu\u00e1rio retira o mouse do bot\u00e3o de compra, ele muda o texto. Vamos come\u00e7ar criando o html. <!DOCTYPE html> <html> <head> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\"> <script type=\"text/javascript\" src=\"scripts/compra.js\"></script> </head> <body> <div class=\"card\" style=\"width: 18rem;\"> <div class=\"card\" style=\"width: 18rem;\"> <img class=\"card-img-top\" src=\"imgs/produto.jpg\" alt=\"Card image cap\"> <div class=\"card-body\"> <h5 class=\"card-title\">Produto muito bom mesmo</h5> <p class=\"card-text\">Um produto fenomenal que vai pirar seu cabe\u00e7\u00e3o.</p> <a href=\"#\" class=\"btn btn-primary\" onmouseout=\"naoDesista()\" onmouseover=\"ultimasUnidades()\">Comprar</a> </div> </div> </body> </html> Na mesma pasta dele cria as pastas scripts e imgs e coloque uma imagem para completar o seu card como nessa imagem. Na pasta scripts vamos criar o arquivo compra.js e nele vamos criar duas fun\u00e7\u00f5es, uma para ser chamada quando o usu\u00e1rio tirar o mouse do bot\u00e3o de compra (naoDesista) e outro para quando ele colocar o mouse sobre o bot\u00e3o (ultimasUnidades). function naoDesista(e) { e = e || window.event; var target = e.target || e.srcElement; target.textContent = \"N\u00e3o v\u00e1 embora\" } function ultimasUnidades(e) { e = e || window.event; var target = e.target || e.srcElement; target.textContent = \"Nosso estoque est\u00e1 acabando, compre agora!!!\" } Quando o mouse entrar ou sair do bot\u00e3o, o texto do bot\u00e3o vai mudar.","title":"Exemplo"},{"location":"ADS/2021/web1/22%20-%20programinhas%20em%20js/","text":"Programinhas em JS Nessa aula vamos fazer fazer 2 programinhas em js. Importar o JS Antes de come\u00e7ar os programas, vamos ver alguns detalhes import\u00e2ntes sobre a importa\u00e7\u00e3o de scripts no HTML nesse link abaixo. Refer\u00eancia Programa para calcular o gasto com combust\u00edvel Vamos fazer um programa onde o usu\u00e1rio vai digitar algumas informa\u00e7\u00f5es (valor do litro de combust\u00edvel, autonomia por litro e o quanto ele vai andar) e o nosso programa vai calcular quanto ele vai gastar. Primeiro vamos criar um form para que o nosso usu\u00e1rio possa digitar as informa\u00e7\u00f5es. <!DOCTYPE html> <html lang=\"pt\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Validando formul\u00e1rios</title> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\" crossorigin=\"anonymous\"></script> <script defer src=\"scripts/combustivel.js\"></script> </head> <body> <div class=\"container\"> <form id=\"formularioUsuario\"> <div class=\"form-group\"> <label for=\"valorPorLitroInput\">Valor por litro</label> <input type=\"number\" step=\"0.01\" class=\"form-control\" id=\"valorPorLitroInput\" placeholder=\"Digite o valor por litro de combust\u00edvel\"> </div> <div class=\"form-group\"> <label for=\"autonomiaInput\">Autonomia</label> <input type=\"number\" step=\"0.01\" class=\"form-control\" id=\"autonomiaInput\" placeholder=\"Digite o quanto o carro anda com 1 litro de combust\u00edvel\"> </div> <div class=\"form-group\"> <label for=\"distanciaInput\">Distancia</label> <input type=\"number\" step=\"0.01\" class=\"form-control\" id=\"distanciaInput\" placeholder=\"Digite o quanto vai andar com o ve\u00edculo\"> </div> <button type=\"submit\" class=\"btn btn-primary\">Submit</button> </form> <div id=\"resultadoOutput\"></div> </div> </body> </html> Agora vamos criar um javascript para fazer esse c\u00e1lculo. Vamos criar uma pasta chamada scripts e criar um script chamada 'combustivel.js'. Nele vamos come\u00e7ar pegando os elementos do html que vamos precisar interagir. valorCombustivel = document.getElementById('valorPorLitroInput') autonomia = document.getElementById('autonomiaInput') distancia = document.getElementById('distanciaInput') resposta = document.getElementById('resultadoOutput') formulario = document.getElementById('formularioUsuario') Depois, vamos criar uma fun\u00e7\u00e3o calcule o gasto utilizando os valores do formul\u00e1rio. function calculaValorGasto(e) { e = e || window.event; e.preventDefault() var gasto = valorCombustivel.value * distancia.value / autonomia.value resposta.innerHTML = \"<p> Voc\u00ea vai gastar \" + gasto + \" reais!!! <\\p>\" } Por padr\u00e3o, quando um formul\u00e1rio \u00e9 enviado, a p\u00e1gina \u00e9 recarregada. O 'e.preventDefault()' serve para evitar que isso aconte\u00e7a. Por fim, vamos adicionar o evento no form, podemos fazer de duas formas, colocando um 'onsubmit' no form ou como no c\u00f3digo abaixo. formulario.addEventListener('submit', calculaValorGasto) No final, o nosso script ficar\u00e1 assim: valorCombustivel = document.getElementById('valorPorLitroInput') autonomia = document.getElementById('autonomiaInput') distancia = document.getElementById('distanciaInput') resposta = document.getElementById('resultadoOutput') formulario = document.getElementById('formularioUsuario') function calculaValorGasto(e) { e = e || window.event; e.preventDefault() var gasto = valorCombustivel.value * distancia.value / autonomia.value resposta.innerHTML = \"<p> Voc\u00ea vai gastar \" + gasto + \" reais!!! <\\p>\" } formulario.addEventListener('submit', calculaValorGasto) Calculando a sequ\u00eancia de fibonacci Agora fa\u00e7a um programa que receba um n\u00famero n e responda a n\u00famero n da sequencia de fibonacci . Voc\u00ea vai precisar usar um la\u00e7o de repeti\u00e7\u00e3o, Aqui voc\u00ea pode encontrar alguns exemplos de como utilizar um for.","title":"Programinhas em JS"},{"location":"ADS/2021/web1/22%20-%20programinhas%20em%20js/#programinhas-em-js","text":"Nessa aula vamos fazer fazer 2 programinhas em js.","title":"Programinhas em JS"},{"location":"ADS/2021/web1/22%20-%20programinhas%20em%20js/#importar-o-js","text":"Antes de come\u00e7ar os programas, vamos ver alguns detalhes import\u00e2ntes sobre a importa\u00e7\u00e3o de scripts no HTML nesse link abaixo. Refer\u00eancia","title":"Importar o JS"},{"location":"ADS/2021/web1/22%20-%20programinhas%20em%20js/#programa-para-calcular-o-gasto-com-combustivel","text":"Vamos fazer um programa onde o usu\u00e1rio vai digitar algumas informa\u00e7\u00f5es (valor do litro de combust\u00edvel, autonomia por litro e o quanto ele vai andar) e o nosso programa vai calcular quanto ele vai gastar. Primeiro vamos criar um form para que o nosso usu\u00e1rio possa digitar as informa\u00e7\u00f5es. <!DOCTYPE html> <html lang=\"pt\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Validando formul\u00e1rios</title> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\" crossorigin=\"anonymous\"></script> <script defer src=\"scripts/combustivel.js\"></script> </head> <body> <div class=\"container\"> <form id=\"formularioUsuario\"> <div class=\"form-group\"> <label for=\"valorPorLitroInput\">Valor por litro</label> <input type=\"number\" step=\"0.01\" class=\"form-control\" id=\"valorPorLitroInput\" placeholder=\"Digite o valor por litro de combust\u00edvel\"> </div> <div class=\"form-group\"> <label for=\"autonomiaInput\">Autonomia</label> <input type=\"number\" step=\"0.01\" class=\"form-control\" id=\"autonomiaInput\" placeholder=\"Digite o quanto o carro anda com 1 litro de combust\u00edvel\"> </div> <div class=\"form-group\"> <label for=\"distanciaInput\">Distancia</label> <input type=\"number\" step=\"0.01\" class=\"form-control\" id=\"distanciaInput\" placeholder=\"Digite o quanto vai andar com o ve\u00edculo\"> </div> <button type=\"submit\" class=\"btn btn-primary\">Submit</button> </form> <div id=\"resultadoOutput\"></div> </div> </body> </html> Agora vamos criar um javascript para fazer esse c\u00e1lculo. Vamos criar uma pasta chamada scripts e criar um script chamada 'combustivel.js'. Nele vamos come\u00e7ar pegando os elementos do html que vamos precisar interagir. valorCombustivel = document.getElementById('valorPorLitroInput') autonomia = document.getElementById('autonomiaInput') distancia = document.getElementById('distanciaInput') resposta = document.getElementById('resultadoOutput') formulario = document.getElementById('formularioUsuario') Depois, vamos criar uma fun\u00e7\u00e3o calcule o gasto utilizando os valores do formul\u00e1rio. function calculaValorGasto(e) { e = e || window.event; e.preventDefault() var gasto = valorCombustivel.value * distancia.value / autonomia.value resposta.innerHTML = \"<p> Voc\u00ea vai gastar \" + gasto + \" reais!!! <\\p>\" } Por padr\u00e3o, quando um formul\u00e1rio \u00e9 enviado, a p\u00e1gina \u00e9 recarregada. O 'e.preventDefault()' serve para evitar que isso aconte\u00e7a. Por fim, vamos adicionar o evento no form, podemos fazer de duas formas, colocando um 'onsubmit' no form ou como no c\u00f3digo abaixo. formulario.addEventListener('submit', calculaValorGasto) No final, o nosso script ficar\u00e1 assim: valorCombustivel = document.getElementById('valorPorLitroInput') autonomia = document.getElementById('autonomiaInput') distancia = document.getElementById('distanciaInput') resposta = document.getElementById('resultadoOutput') formulario = document.getElementById('formularioUsuario') function calculaValorGasto(e) { e = e || window.event; e.preventDefault() var gasto = valorCombustivel.value * distancia.value / autonomia.value resposta.innerHTML = \"<p> Voc\u00ea vai gastar \" + gasto + \" reais!!! <\\p>\" } formulario.addEventListener('submit', calculaValorGasto)","title":"Programa para calcular o gasto com combust\u00edvel"},{"location":"ADS/2021/web1/22%20-%20programinhas%20em%20js/#calculando-a-sequencia-de-fibonacci","text":"Agora fa\u00e7a um programa que receba um n\u00famero n e responda a n\u00famero n da sequencia de fibonacci . Voc\u00ea vai precisar usar um la\u00e7o de repeti\u00e7\u00e3o, Aqui voc\u00ea pode encontrar alguns exemplos de como utilizar um for.","title":"Calculando a sequ\u00eancia de fibonacci"},{"location":"ADS/2021/web1/23%20-%20validando%20forms%20com%20js/","text":"Validando Forms com JS Quando o usu\u00e1rio digita informa\u00e7\u00f5es nos formul\u00e1rios para enviar para a nossa aplica\u00e7\u00e3o, ele pode colocar informa\u00e7\u00f5es inv\u00e1lidas ou em formatos errados. Por exemplo, quando um usu\u00e1rio est\u00e1 digitando a quantidade de um produto que ele quer comprar no carrinho de uma loja, ele n\u00e3o pode colocar um n\u00famero negativo. Outro exemplo comum \u00e9 a formata\u00e7\u00e3o de email ou de cpf. Para evitar que o usu\u00e1rio envie informa\u00e7\u00f5es inv\u00e1lidas para a aplica\u00e7\u00e3o, podemos fazer a valida\u00e7\u00e3o dos dados que est\u00e3o no form. Temos algumas formas de fazer isso, uma delas \u00e9 utilizando o JS. Criando o nosso form Vamos come\u00e7ar com o nosso formul\u00e1rio em HTML. <!DOCTYPE html> <html lang=\"pt\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Validando formul\u00e1rios</title> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\" crossorigin=\"anonymous\"></script> <script defer src=\"scripts/validacao.js\"></script> </head> <body> <div class=\"container\"> <form id=\"formularioUsuario\" onsubmit=\"validaFormulario()\"> <div class=\"form-group\"> <label for=\"nomeInput\">Nome</label> <input type=\"text\" name=\"nome\" class=\"form-control\" id=\"nomeInput\" placeholder=\"Digite o seu nome\"> </div> <div class=\"form-group\"> <label for=\"emailInput\">Email</label> <input type=\"text\" name=\"email\" class=\"form-control\" id=\"emailInput\" placeholder=\"O seu email\"> </div> <div class=\"form-group\"> <label for=\"passwordInput\">Senha</label> <input type=\"password\" name=\"senha\" class=\"form-control\" id=\"passwordInput\" placeholder=\"Digite a sua senha\"> </div> <div class=\"form-group\"> <label for=\"passwordConfirmacaoInput\">Confirma\u00e7\u00e3o da senha</label> <input type=\"password\" class=\"form-control\" id=\"passwordConfirmacaoInput\" placeholder=\"Confirme a sua senha\"> </div> <button onclick=\"validaFormulario()\" class=\"btn btn-primary\">Submit</button> </form> <div id=\"resultadoOutput\"></div> </div> </body> </html> Vamos agora criar um arquivo js na pasta scripts e criar a fun\u00e7\u00e3o validaFormulario . function validaFormulario(e) { e = e || window.event; var erro = false var nome = document.getElementById(\"nomeInput\") var email = document.getElementById(\"emailInput\") var senha = document.getElementById(\"passwordInput\") var confirmacaoSenha = document.getElementById(\"passwordConfirmacaoInput\") var formulario = document.getElementById(\"formularioUsuario\") limpaResultado() if(nome.value == \"\") { adicionaErro(\"O nome n\u00e3o pode estar vazio\") erro = true } if(erro) { e.preventDefault() } } function limpaResultado() { resultado = document.getElementById('resultadoOutput') resultado.innerHTML = \"\" } function adicionaErro(mensagemDeErro) { resultado = document.getElementById('resultadoOutput') resultado.innerHTML += \"<p>\"+ mensagemDeErro +\"</p>\" } Tamb\u00e9m criamos duas fun\u00e7\u00f5es para mostrar o resultado da valida\u00e7\u00e3o para o usu\u00e1rio. Nesse c\u00f3digo, a fun\u00e7\u00e3o verifica se o nome est\u00e1 vazio e, caso esteja, coloca uma mensagem de erro e colocar verdadeiro na vari\u00e1vel erro. No final da fun\u00e7\u00e3o, caso erro seja verdadeiro, o c\u00f3digo e.preventDefault() vai evitar que a requisi\u00e7\u00e3o seja realizada. Caso n\u00e3o seja encontrado nenhum erro, a requisi\u00e7\u00e3o pode ser feita. Atividade Utilizando o c\u00f3digo acima, modifique a fun\u00e7\u00e3o de valida\u00e7\u00e3o para que: Mostre um erro caso algum dos campos n\u00e3o tenha sido preenchido. Mostre um erro caso o email n\u00e3o seja v\u00e1lido (vamos considerar aqui que o email \u00e9 v\u00e1lido se tiver 1 @) dica Mostre um erro caso a pessoa tenha digitado uma senha diferente na confirma\u00e7\u00e3o de senha. (== funciona)","title":"Validando Forms com JS"},{"location":"ADS/2021/web1/23%20-%20validando%20forms%20com%20js/#validando-forms-com-js","text":"Quando o usu\u00e1rio digita informa\u00e7\u00f5es nos formul\u00e1rios para enviar para a nossa aplica\u00e7\u00e3o, ele pode colocar informa\u00e7\u00f5es inv\u00e1lidas ou em formatos errados. Por exemplo, quando um usu\u00e1rio est\u00e1 digitando a quantidade de um produto que ele quer comprar no carrinho de uma loja, ele n\u00e3o pode colocar um n\u00famero negativo. Outro exemplo comum \u00e9 a formata\u00e7\u00e3o de email ou de cpf. Para evitar que o usu\u00e1rio envie informa\u00e7\u00f5es inv\u00e1lidas para a aplica\u00e7\u00e3o, podemos fazer a valida\u00e7\u00e3o dos dados que est\u00e3o no form. Temos algumas formas de fazer isso, uma delas \u00e9 utilizando o JS.","title":"Validando Forms com JS"},{"location":"ADS/2021/web1/23%20-%20validando%20forms%20com%20js/#criando-o-nosso-form","text":"Vamos come\u00e7ar com o nosso formul\u00e1rio em HTML. <!DOCTYPE html> <html lang=\"pt\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Validando formul\u00e1rios</title> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\" crossorigin=\"anonymous\"></script> <script defer src=\"scripts/validacao.js\"></script> </head> <body> <div class=\"container\"> <form id=\"formularioUsuario\" onsubmit=\"validaFormulario()\"> <div class=\"form-group\"> <label for=\"nomeInput\">Nome</label> <input type=\"text\" name=\"nome\" class=\"form-control\" id=\"nomeInput\" placeholder=\"Digite o seu nome\"> </div> <div class=\"form-group\"> <label for=\"emailInput\">Email</label> <input type=\"text\" name=\"email\" class=\"form-control\" id=\"emailInput\" placeholder=\"O seu email\"> </div> <div class=\"form-group\"> <label for=\"passwordInput\">Senha</label> <input type=\"password\" name=\"senha\" class=\"form-control\" id=\"passwordInput\" placeholder=\"Digite a sua senha\"> </div> <div class=\"form-group\"> <label for=\"passwordConfirmacaoInput\">Confirma\u00e7\u00e3o da senha</label> <input type=\"password\" class=\"form-control\" id=\"passwordConfirmacaoInput\" placeholder=\"Confirme a sua senha\"> </div> <button onclick=\"validaFormulario()\" class=\"btn btn-primary\">Submit</button> </form> <div id=\"resultadoOutput\"></div> </div> </body> </html> Vamos agora criar um arquivo js na pasta scripts e criar a fun\u00e7\u00e3o validaFormulario . function validaFormulario(e) { e = e || window.event; var erro = false var nome = document.getElementById(\"nomeInput\") var email = document.getElementById(\"emailInput\") var senha = document.getElementById(\"passwordInput\") var confirmacaoSenha = document.getElementById(\"passwordConfirmacaoInput\") var formulario = document.getElementById(\"formularioUsuario\") limpaResultado() if(nome.value == \"\") { adicionaErro(\"O nome n\u00e3o pode estar vazio\") erro = true } if(erro) { e.preventDefault() } } function limpaResultado() { resultado = document.getElementById('resultadoOutput') resultado.innerHTML = \"\" } function adicionaErro(mensagemDeErro) { resultado = document.getElementById('resultadoOutput') resultado.innerHTML += \"<p>\"+ mensagemDeErro +\"</p>\" } Tamb\u00e9m criamos duas fun\u00e7\u00f5es para mostrar o resultado da valida\u00e7\u00e3o para o usu\u00e1rio. Nesse c\u00f3digo, a fun\u00e7\u00e3o verifica se o nome est\u00e1 vazio e, caso esteja, coloca uma mensagem de erro e colocar verdadeiro na vari\u00e1vel erro. No final da fun\u00e7\u00e3o, caso erro seja verdadeiro, o c\u00f3digo e.preventDefault() vai evitar que a requisi\u00e7\u00e3o seja realizada. Caso n\u00e3o seja encontrado nenhum erro, a requisi\u00e7\u00e3o pode ser feita.","title":"Criando o nosso form"},{"location":"ADS/2021/web1/23%20-%20validando%20forms%20com%20js/#atividade","text":"Utilizando o c\u00f3digo acima, modifique a fun\u00e7\u00e3o de valida\u00e7\u00e3o para que: Mostre um erro caso algum dos campos n\u00e3o tenha sido preenchido. Mostre um erro caso o email n\u00e3o seja v\u00e1lido (vamos considerar aqui que o email \u00e9 v\u00e1lido se tiver 1 @) dica Mostre um erro caso a pessoa tenha digitado uma senha diferente na confirma\u00e7\u00e3o de senha. (== funciona)","title":"Atividade"},{"location":"ADS/2021/web1/24%20-%20vue1/","text":"Vue.js: Introdu\u00e7\u00e3o Nessa aula vamos come\u00e7ar a ver um framework de frontend chamado Vue.js. Introdu\u00e7\u00e3o Como voc\u00eas viram nas \u00faltimas aulas, n\u00e3o \u00e9 produtivo fazer nossos sites utilizando JS puro. Para agilizar nossa vida, podemos utilizar um framework(conjunto de ferramentas). Um dos primeiros frameworks em JS que existiu foi o JQuery, e inovou bantande com a parte de anima\u00e7\u00f5es e ajax, al\u00e9m de ferramentas para compatibilidade com os navegadores. Hoje em dia, ele ainda existe, mas j\u00e9 \u00e9 antigo e existem frameworks mais modernos. Hoje em dia, n\u00f3s temos 3 frameworks de frontend em JS que s\u00e3o bem conhecidos, o Angular, o React e o Vue. N\u00f3s vamos aprender o vue . O que \u00e9 o vue Come\u00e7ando os c\u00f3digos Vamos come\u00e7ar devagar, adicionando o vue \u00e0s p\u00e1ginas que estamos fazendo. Vamos criar uma p\u00e1gina s\u00f3 com uma div no corpo. <!DOCTYPE html> <html lang=\"pt\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Document</title> <script src=\"https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js\"></script> <script defer src=\"scripts/app.js\"></script> </head> <body> <div id=\"app\"> {{ mensagem }} </div> </body> </html> A linha abaixo \u00e9 respons\u00e1vel por importar o JS do vue para a nossa p\u00e1gina. <script src=\"https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js\"></script> Vamos criar tamb\u00e9m um arquivo javascript no pasta script chamado app.js com esse conte\u00fado: var app = new Vue({ el: '#app', data:{ mensagem: 'Ol\u00e1 mundo' }, }) Nele n\u00f3s criamos a aplica\u00e7\u00e3o do vue, dizemos que ele tem que aparecer na div com id app e colocamos uma vari\u00e1vel chamada mensagem na nossa aplica\u00e7\u00e3o. Sempre que quisermos mostrar o valor de uma vari\u00e1vel da nossa aplica\u00e7\u00e3o no html, colocamos o nome dela entre duas chaves \"{{ }}\" como fizemos com a mensagem.","title":"Vue.js: Introdu\u00e7\u00e3o"},{"location":"ADS/2021/web1/24%20-%20vue1/#vuejs-introducao","text":"Nessa aula vamos come\u00e7ar a ver um framework de frontend chamado Vue.js.","title":"Vue.js: Introdu\u00e7\u00e3o"},{"location":"ADS/2021/web1/24%20-%20vue1/#introducao","text":"Como voc\u00eas viram nas \u00faltimas aulas, n\u00e3o \u00e9 produtivo fazer nossos sites utilizando JS puro. Para agilizar nossa vida, podemos utilizar um framework(conjunto de ferramentas). Um dos primeiros frameworks em JS que existiu foi o JQuery, e inovou bantande com a parte de anima\u00e7\u00f5es e ajax, al\u00e9m de ferramentas para compatibilidade com os navegadores. Hoje em dia, ele ainda existe, mas j\u00e9 \u00e9 antigo e existem frameworks mais modernos. Hoje em dia, n\u00f3s temos 3 frameworks de frontend em JS que s\u00e3o bem conhecidos, o Angular, o React e o Vue. N\u00f3s vamos aprender o vue . O que \u00e9 o vue","title":"Introdu\u00e7\u00e3o"},{"location":"ADS/2021/web1/24%20-%20vue1/#comecando-os-codigos","text":"Vamos come\u00e7ar devagar, adicionando o vue \u00e0s p\u00e1ginas que estamos fazendo. Vamos criar uma p\u00e1gina s\u00f3 com uma div no corpo. <!DOCTYPE html> <html lang=\"pt\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Document</title> <script src=\"https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js\"></script> <script defer src=\"scripts/app.js\"></script> </head> <body> <div id=\"app\"> {{ mensagem }} </div> </body> </html> A linha abaixo \u00e9 respons\u00e1vel por importar o JS do vue para a nossa p\u00e1gina. <script src=\"https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js\"></script> Vamos criar tamb\u00e9m um arquivo javascript no pasta script chamado app.js com esse conte\u00fado: var app = new Vue({ el: '#app', data:{ mensagem: 'Ol\u00e1 mundo' }, }) Nele n\u00f3s criamos a aplica\u00e7\u00e3o do vue, dizemos que ele tem que aparecer na div com id app e colocamos uma vari\u00e1vel chamada mensagem na nossa aplica\u00e7\u00e3o. Sempre que quisermos mostrar o valor de uma vari\u00e1vel da nossa aplica\u00e7\u00e3o no html, colocamos o nome dela entre duas chaves \"{{ }}\" como fizemos com a mensagem.","title":"Come\u00e7ando os c\u00f3digos"},{"location":"ADS/2022/BD2/01%20-%20revis%C3%A3o/","text":"Revis\u00e3o de SQL Nessas primeiras aulas, vamos relembrar o SQL de BD1. Divis\u00e3o do SQL DDL - Data Definition Language - Linguagem de Defini\u00e7\u00e3o de Dados. S\u00e3o os comandos que interagem com os objetos do banco. CREATE ALTER DROP DML - Data Manipulation Language - Linguagem de Manipula\u00e7\u00e3o de Dados. S\u00e3o os comandos que interagem com os dados dentro das tabelas. INSERT DELETE UPDATE SELECT DCL - Data Control Language - Linguagem de Controle de Dados. S\u00e3o os comandos para controlar a parte de seguran\u00e7a do banco de dados. GRANT REVOKE DENY DTL - Data Transaction Language - Linguagem de Transa\u00e7\u00e3o de Dados. S\u00e3o os comandos para controle de transa\u00e7\u00e3o. BEGIN TRANSACTION COMMIT ROLLBACK Logando no banco Para logar no banco pelo terminal utilizamos o comando mysql: mysql -u usuario -p Se o banco n\u00e3o estiver na mesma m\u00e1quina ou estiver em alguma porta diferente da padr\u00e3o (3306) devemos utilizar os par\u00e2metros -h (host) e -p (porta) para informar isso. Se n\u00e3o passarmos o par\u00e2metro -D (database) ele ir\u00e1 entrar no servidor sem acessar um banco espec\u00edfico. Ap\u00f3s logar no servidor, podemos ver os bancos instalados com o comando: SHOW DATABASES; Se nenhum banco tiver sido criado no servidor, existir\u00e3o esses bancos: +--------------------+ | Database | +--------------------+ | information_schema | | mysql | | performance_schema | | sys | +--------------------+ Para criar um novo banco, utilizamos o comando CREATE : create database ads; Para utilizarmos um banco de dados, usamos o comando USE USE ads; Criando tabelas Para criar tabelas, utilizamos o comando CREATE TABLE Refer\u00eancia CREATE TABLE table_name ( column1 datatype NOT NULL, column2 datatype DEFAULT 'aaaa', column3 datatype, ...., PRIMARY KEY (column1), FOREIGN KEY (PersonID) REFERENCES Persons(PersonID) ); Tipos de dados Usem essa refer\u00eancia para ver quais os tipos de dados dispon\u00edveis. Refer\u00eancia Tipo json Alguns bancos suportam salvar e fazer opera\u00e7\u00f5es em colunas json (alguns conseguem salvar o json de forma bin\u00e1ria, outros salvam como texto). \u00c9 uma op\u00e7\u00e3o interessante para salvar dados com formato ou tamanho incerto (ex: listas). Refer\u00eancia Podemos criar a seguinte tabela: CREATE TABLE alunos ( id INT PRIMARY KEY AUTO_INCREMENT, nome VARCHAR(255) NOT NULL, outros_dados JSON NOT NULL ); Para vermos as colunas criadas nela, podemos utilizar o comando: DESCRIBE alunos; E devemos ter o seguinte resultado: mysql> DESCRIBE alunos; +--------------+--------------+------+-----+---------+----------------+ | Field | Type | Null | Key | Default | Extra | +--------------+--------------+------+-----+---------+----------------+ | id | int | NO | PRI | NULL | auto_increment | | nome | varchar(255) | NO | | NULL | | | outros_dados | json | NO | | NULL | | +--------------+--------------+------+-----+---------+----------------+ Inserindo dados Para inserir dados no banco, utilizamos o comando INSERT INTO . Refer\u00eancia Utilizando a tabela alunos, que acabamos de criar, como exemplo, vamos inserir um registro com o comando abaixo: INSERT INTO alunos (nome, outros_dados) VALUES ('pedro', '{\"media_graduacao\": 10, \"experiencia\": [\"a\", \"b\"]}'); Se selercionamos todos os dados dessa tabela, vamos ter o seguinte resultado: mysql> SELECT * FROM alunos; +----+-------+----------------------------------------------------+ | id | nome | outros_dados | +----+-------+----------------------------------------------------+ | 1 | pedro | {\"experiencia\": [\"a\", \"b\"], \"media_graduacao\": 10} | +----+-------+----------------------------------------------------+ 1 row in set (0.00 sec) Se quiser inserir diversos registros no mesmo comando, basta separar as tuplas com os valores com virgulas: INSERT INTO alunos (nome, outros_dados) VALUES ('pedro', '{\"media_graduacao\": 10, \"experiencia\": [\"a\", \"b\"]}'), ('jo\u00e3o' , '{\"media_graduacao\": 10, \"experiencia\": [\"a\", \"b\"]}'); Atualizando valores Nunca utilize o UPDATE sem o WHERE Para atualizar os dados, utilizamos o comando UPDATE Refer\u00eancia Vamos atualizar o nome do aluno com id 1: UPDATE alunos SET nome = 'Pedro Senna' WHERE id = 1; UPDATE alunos SET outros_dados = JSON_SET(outros_dados, \"$.experiencia\", JSON_ARRAY('exp1','exp2')) WHERE id = 1;","title":"Revis\u00e3o de SQL"},{"location":"ADS/2022/BD2/01%20-%20revis%C3%A3o/#revisao-de-sql","text":"Nessas primeiras aulas, vamos relembrar o SQL de BD1.","title":"Revis\u00e3o de SQL"},{"location":"ADS/2022/BD2/01%20-%20revis%C3%A3o/#divisao-do-sql","text":"DDL - Data Definition Language - Linguagem de Defini\u00e7\u00e3o de Dados. S\u00e3o os comandos que interagem com os objetos do banco. CREATE ALTER DROP DML - Data Manipulation Language - Linguagem de Manipula\u00e7\u00e3o de Dados. S\u00e3o os comandos que interagem com os dados dentro das tabelas. INSERT DELETE UPDATE SELECT DCL - Data Control Language - Linguagem de Controle de Dados. S\u00e3o os comandos para controlar a parte de seguran\u00e7a do banco de dados. GRANT REVOKE DENY DTL - Data Transaction Language - Linguagem de Transa\u00e7\u00e3o de Dados. S\u00e3o os comandos para controle de transa\u00e7\u00e3o. BEGIN TRANSACTION COMMIT ROLLBACK","title":"Divis\u00e3o do SQL"},{"location":"ADS/2022/BD2/01%20-%20revis%C3%A3o/#logando-no-banco","text":"Para logar no banco pelo terminal utilizamos o comando mysql: mysql -u usuario -p Se o banco n\u00e3o estiver na mesma m\u00e1quina ou estiver em alguma porta diferente da padr\u00e3o (3306) devemos utilizar os par\u00e2metros -h (host) e -p (porta) para informar isso. Se n\u00e3o passarmos o par\u00e2metro -D (database) ele ir\u00e1 entrar no servidor sem acessar um banco espec\u00edfico. Ap\u00f3s logar no servidor, podemos ver os bancos instalados com o comando: SHOW DATABASES; Se nenhum banco tiver sido criado no servidor, existir\u00e3o esses bancos: +--------------------+ | Database | +--------------------+ | information_schema | | mysql | | performance_schema | | sys | +--------------------+ Para criar um novo banco, utilizamos o comando CREATE : create database ads; Para utilizarmos um banco de dados, usamos o comando USE USE ads;","title":"Logando no banco"},{"location":"ADS/2022/BD2/01%20-%20revis%C3%A3o/#criando-tabelas","text":"Para criar tabelas, utilizamos o comando CREATE TABLE Refer\u00eancia CREATE TABLE table_name ( column1 datatype NOT NULL, column2 datatype DEFAULT 'aaaa', column3 datatype, ...., PRIMARY KEY (column1), FOREIGN KEY (PersonID) REFERENCES Persons(PersonID) );","title":"Criando tabelas"},{"location":"ADS/2022/BD2/01%20-%20revis%C3%A3o/#tipos-de-dados","text":"Usem essa refer\u00eancia para ver quais os tipos de dados dispon\u00edveis. Refer\u00eancia","title":"Tipos de dados"},{"location":"ADS/2022/BD2/01%20-%20revis%C3%A3o/#tipo-json","text":"Alguns bancos suportam salvar e fazer opera\u00e7\u00f5es em colunas json (alguns conseguem salvar o json de forma bin\u00e1ria, outros salvam como texto). \u00c9 uma op\u00e7\u00e3o interessante para salvar dados com formato ou tamanho incerto (ex: listas). Refer\u00eancia Podemos criar a seguinte tabela: CREATE TABLE alunos ( id INT PRIMARY KEY AUTO_INCREMENT, nome VARCHAR(255) NOT NULL, outros_dados JSON NOT NULL ); Para vermos as colunas criadas nela, podemos utilizar o comando: DESCRIBE alunos; E devemos ter o seguinte resultado: mysql> DESCRIBE alunos; +--------------+--------------+------+-----+---------+----------------+ | Field | Type | Null | Key | Default | Extra | +--------------+--------------+------+-----+---------+----------------+ | id | int | NO | PRI | NULL | auto_increment | | nome | varchar(255) | NO | | NULL | | | outros_dados | json | NO | | NULL | | +--------------+--------------+------+-----+---------+----------------+","title":"Tipo json"},{"location":"ADS/2022/BD2/01%20-%20revis%C3%A3o/#inserindo-dados","text":"Para inserir dados no banco, utilizamos o comando INSERT INTO . Refer\u00eancia Utilizando a tabela alunos, que acabamos de criar, como exemplo, vamos inserir um registro com o comando abaixo: INSERT INTO alunos (nome, outros_dados) VALUES ('pedro', '{\"media_graduacao\": 10, \"experiencia\": [\"a\", \"b\"]}'); Se selercionamos todos os dados dessa tabela, vamos ter o seguinte resultado: mysql> SELECT * FROM alunos; +----+-------+----------------------------------------------------+ | id | nome | outros_dados | +----+-------+----------------------------------------------------+ | 1 | pedro | {\"experiencia\": [\"a\", \"b\"], \"media_graduacao\": 10} | +----+-------+----------------------------------------------------+ 1 row in set (0.00 sec) Se quiser inserir diversos registros no mesmo comando, basta separar as tuplas com os valores com virgulas: INSERT INTO alunos (nome, outros_dados) VALUES ('pedro', '{\"media_graduacao\": 10, \"experiencia\": [\"a\", \"b\"]}'), ('jo\u00e3o' , '{\"media_graduacao\": 10, \"experiencia\": [\"a\", \"b\"]}');","title":"Inserindo dados"},{"location":"ADS/2022/BD2/01%20-%20revis%C3%A3o/#atualizando-valores","text":"Nunca utilize o UPDATE sem o WHERE Para atualizar os dados, utilizamos o comando UPDATE Refer\u00eancia Vamos atualizar o nome do aluno com id 1: UPDATE alunos SET nome = 'Pedro Senna' WHERE id = 1; UPDATE alunos SET outros_dados = JSON_SET(outros_dados, \"$.experiencia\", JSON_ARRAY('exp1','exp2')) WHERE id = 1;","title":"Atualizando valores"},{"location":"ADS/2022/BD2/02%20-%20revis%C3%A3o%20select/","text":"Revis\u00e3o de SQL: SELECT Nessa aula vamos utilizar esse banco de dados: avatar.sql Estrutura do banco O banco possui a estrutura abaixo. SELECT Refer\u00eancia Primeira consulta Listar todas as pessoas SELECT * FROM pessoas; Resultado +----+--------+----------+ | id | nome | nacao_id | +----+--------+----------+ | 1 | Aang | 5 | | 2 | Katara | 2 | | 3 | Sokka | 2 | | 4 | Zuko | 1 | | 5 | Toph | 4 | | 6 | Paku | 3 | | 7 | Suki | 4 | | 8 | Iron | 1 | | 9 | Hakoda | 2 | | 10 | Roku | 1 | | 11 | kyoshi | 4 | +----+--------+----------+ Condi\u00e7\u00f5es Procurar todas as pessoas que o nome come\u00e7a ou termina com A SELECT * FROM pessoas WHERE nome LIKE \"A%\" OR nome LIKE \"%a\"; Resultado +----+--------+----------+ | id | nome | nacao_id | +----+--------+----------+ | 1 | Aang | 5 | | 2 | Katara | 2 | | 3 | Sokka | 2 | | 9 | Hakoda | 2 | +----+--------+----------+ Join Vamos criar um sql que apresente somente o nome da pessoa e a na\u00e7\u00e3o que ele pertence. SELECT p.nome, n.nome FROM pessoas AS p JOIN nacoes as n ON p.nacao_id = n.id; Resultado +--------+-----------------------+ | nome | nome | +--------+-----------------------+ | Aang | Nomades do ar | | Katara | Tribo da gua do sul | | Sokka | Tribo da gua do sul | | Zuko | Nacao do fogo | | Toph | Reino da terra | | Paku | Tribo da gua do norte | | Suki | Reino da terra | | Iron | Nacao do fogo | | Hakoda | Tribo da gua do sul | | Roku | Nacao do fogo | | kyoshi | Reino da terra | +--------+-----------------------+ Ordenando Vamos criar um sql que apresente somente o nome da pessoa e a na\u00e7\u00e3o que ele pertence, ordenando pelo nome da na\u00e7\u00e3o. SELECT p.nome, n.nome FROM pessoas AS p JOIN nacoes as n ON p.nacao_id = n.id ORDER BY n.nome; Resultado +--------+-----------------------+ | nome | nome | +--------+-----------------------+ | Iron | Nacao do fogo | | Zuko | Nacao do fogo | | Roku | Nacao do fogo | | Aang | Nomades do ar | | kyoshi | Reino da terra | | Suki | Reino da terra | | Toph | Reino da terra | | Paku | Tribo da gua do norte | | Hakoda | Tribo da gua do sul | | Katara | Tribo da gua do sul | | Sokka | Tribo da gua do sul | +--------+-----------------------+ Agrupando pela na\u00e7\u00e3o Vamos contar quantas pessoas cada na\u00e7\u00e3o possui. SELECT n.nome AS 'nacao', COUNT(*) AS 'populacao' FROM nacoes AS n JOIN pessoas AS p ON n.id = p.nacao_id GROUP BY n.id; Resultado +-----------------------+-----------+ | nacao | populacao | +-----------------------+-----------+ | Nacao do fogo | 3 | | Tribo da gua do sul | 3 | | Tribo da gua do norte | 1 | | Reino da terra | 3 | | Nomades do ar | 1 | +-----------------------+-----------+ Limitando a quantidade de respostas SELECT p.nome, n.nome FROM pessoas AS p JOIN nacoes as n ON p.nacao_id = n.id LIMIT 4; Procurando os avatares Precisamos encontrar os avatares cadastrados no banco de dados. Como regra, os avatares s\u00e3o os \u00fanicos personagens capazes de dominar mais de um elemento. Com essa informa\u00e7\u00e3o, podemos fazer um join das pessoas com os elementos e agrupar as respostas pelas pessoa. Dessa forma, podemos utizar a fun\u00e7\u00e3o de agrega\u00e7\u00e3o COUNT para saber quantos elementos cada pessoa domina. Para criarmos condi\u00e7\u00f5es utilizado agrega\u00e7\u00f5es, utilizamos o HAVING. SELECT * FROM pessoas AS p JOIN pessoa_elemento AS pe on p.id = pe.pessoa_id GROUP BY p.id HAVING COUNT(elemento_id) = 4; Concatenando as respostas de uma agrega\u00e7\u00e3o SELECT p.nome, COALESCE(Group_CONCAT(e.nome), 'Nenhum') AS elementos FROM pessoas as p LEFT JOIN pessoa_elemento AS pe ON p.id = pe.pessoa_id LEFT JOIN elementos AS e ON pe.elemento_id = e.id GROUP BY p.id; +--------+--------------------+ | nome | elementos | +--------+--------------------+ | Aang | Fogo,Agua,Terra,Ar | | Katara | Agua | | Sokka | Nenhum | | Zuko | Fogo | | Toph | Terra | | Paku | Agua | | Suki | Nenhum | | Iron | Fogo | | Hakoda | Nenhum | | Roku | Fogo,Agua,Terra,Ar | | kyoshi | Fogo,Agua,Terra,Ar | +--------+--------------------+ Atividades Crie uma consulta para descobrir quais pessoas n\u00e3o dominam nenhum elemento. Crie uma consulta para descobrir quantas pessoas participaram de duas ou mais transa\u00e7\u00f5es comerciais. Crie uma consulta para mostrar quanto cada na\u00e7\u00e3o vendeu (a soma das vendas das pessoas da na\u00e7\u00e3o). Desafio \"Boa de prova ;)\" Crie uma consulta para listar a \"balan\u00e7a comercia\" de cada uma das pessoas, mostrando o total do valor de compras, de vendas e a diferen\u00e7a entre eles. Como no exemplo abaixo. +--------+--------------+---------------+-----------+ | Nome | Total_Vendas | Total_Compras | Resultado | +--------+--------------+---------------+-----------+ | Aang | 25 | 0 | 25 | | Hakoda | 59 | 0 | 59 | | Iron | 0 | 0 | 0 | | Katara | 56 | 57 | -1 | | kyoshi | 0 | 0 | 0 | | Paku | 0 | 22 | -22 | | Roku | 0 | 0 | 0 | | Sokka | 110 | 0 | 110 | | Suki | 0 | 10 | -10 | | Toph | 22 | 115 | -93 | | Zuko | 32 | 100 | -68 | +--------+--------------+---------------+-----------+","title":"Revis\u00e3o de SQL: SELECT"},{"location":"ADS/2022/BD2/02%20-%20revis%C3%A3o%20select/#revisao-de-sql-select","text":"Nessa aula vamos utilizar esse banco de dados: avatar.sql","title":"Revis\u00e3o de SQL: SELECT"},{"location":"ADS/2022/BD2/02%20-%20revis%C3%A3o%20select/#estrutura-do-banco","text":"O banco possui a estrutura abaixo.","title":"Estrutura do banco"},{"location":"ADS/2022/BD2/02%20-%20revis%C3%A3o%20select/#select","text":"Refer\u00eancia","title":"SELECT"},{"location":"ADS/2022/BD2/02%20-%20revis%C3%A3o%20select/#primeira-consulta","text":"Listar todas as pessoas SELECT * FROM pessoas; Resultado +----+--------+----------+ | id | nome | nacao_id | +----+--------+----------+ | 1 | Aang | 5 | | 2 | Katara | 2 | | 3 | Sokka | 2 | | 4 | Zuko | 1 | | 5 | Toph | 4 | | 6 | Paku | 3 | | 7 | Suki | 4 | | 8 | Iron | 1 | | 9 | Hakoda | 2 | | 10 | Roku | 1 | | 11 | kyoshi | 4 | +----+--------+----------+","title":"Primeira consulta"},{"location":"ADS/2022/BD2/02%20-%20revis%C3%A3o%20select/#condicoes","text":"Procurar todas as pessoas que o nome come\u00e7a ou termina com A SELECT * FROM pessoas WHERE nome LIKE \"A%\" OR nome LIKE \"%a\"; Resultado +----+--------+----------+ | id | nome | nacao_id | +----+--------+----------+ | 1 | Aang | 5 | | 2 | Katara | 2 | | 3 | Sokka | 2 | | 9 | Hakoda | 2 | +----+--------+----------+","title":"Condi\u00e7\u00f5es"},{"location":"ADS/2022/BD2/02%20-%20revis%C3%A3o%20select/#join","text":"Vamos criar um sql que apresente somente o nome da pessoa e a na\u00e7\u00e3o que ele pertence. SELECT p.nome, n.nome FROM pessoas AS p JOIN nacoes as n ON p.nacao_id = n.id; Resultado +--------+-----------------------+ | nome | nome | +--------+-----------------------+ | Aang | Nomades do ar | | Katara | Tribo da gua do sul | | Sokka | Tribo da gua do sul | | Zuko | Nacao do fogo | | Toph | Reino da terra | | Paku | Tribo da gua do norte | | Suki | Reino da terra | | Iron | Nacao do fogo | | Hakoda | Tribo da gua do sul | | Roku | Nacao do fogo | | kyoshi | Reino da terra | +--------+-----------------------+","title":"Join"},{"location":"ADS/2022/BD2/02%20-%20revis%C3%A3o%20select/#ordenando","text":"Vamos criar um sql que apresente somente o nome da pessoa e a na\u00e7\u00e3o que ele pertence, ordenando pelo nome da na\u00e7\u00e3o. SELECT p.nome, n.nome FROM pessoas AS p JOIN nacoes as n ON p.nacao_id = n.id ORDER BY n.nome; Resultado +--------+-----------------------+ | nome | nome | +--------+-----------------------+ | Iron | Nacao do fogo | | Zuko | Nacao do fogo | | Roku | Nacao do fogo | | Aang | Nomades do ar | | kyoshi | Reino da terra | | Suki | Reino da terra | | Toph | Reino da terra | | Paku | Tribo da gua do norte | | Hakoda | Tribo da gua do sul | | Katara | Tribo da gua do sul | | Sokka | Tribo da gua do sul | +--------+-----------------------+","title":"Ordenando"},{"location":"ADS/2022/BD2/02%20-%20revis%C3%A3o%20select/#agrupando-pela-nacao","text":"Vamos contar quantas pessoas cada na\u00e7\u00e3o possui. SELECT n.nome AS 'nacao', COUNT(*) AS 'populacao' FROM nacoes AS n JOIN pessoas AS p ON n.id = p.nacao_id GROUP BY n.id; Resultado +-----------------------+-----------+ | nacao | populacao | +-----------------------+-----------+ | Nacao do fogo | 3 | | Tribo da gua do sul | 3 | | Tribo da gua do norte | 1 | | Reino da terra | 3 | | Nomades do ar | 1 | +-----------------------+-----------+","title":"Agrupando pela na\u00e7\u00e3o"},{"location":"ADS/2022/BD2/02%20-%20revis%C3%A3o%20select/#limitando-a-quantidade-de-respostas","text":"SELECT p.nome, n.nome FROM pessoas AS p JOIN nacoes as n ON p.nacao_id = n.id LIMIT 4;","title":"Limitando a quantidade de respostas"},{"location":"ADS/2022/BD2/02%20-%20revis%C3%A3o%20select/#procurando-os-avatares","text":"Precisamos encontrar os avatares cadastrados no banco de dados. Como regra, os avatares s\u00e3o os \u00fanicos personagens capazes de dominar mais de um elemento. Com essa informa\u00e7\u00e3o, podemos fazer um join das pessoas com os elementos e agrupar as respostas pelas pessoa. Dessa forma, podemos utizar a fun\u00e7\u00e3o de agrega\u00e7\u00e3o COUNT para saber quantos elementos cada pessoa domina. Para criarmos condi\u00e7\u00f5es utilizado agrega\u00e7\u00f5es, utilizamos o HAVING. SELECT * FROM pessoas AS p JOIN pessoa_elemento AS pe on p.id = pe.pessoa_id GROUP BY p.id HAVING COUNT(elemento_id) = 4;","title":"Procurando os avatares"},{"location":"ADS/2022/BD2/02%20-%20revis%C3%A3o%20select/#concatenando-as-respostas-de-uma-agregacao","text":"SELECT p.nome, COALESCE(Group_CONCAT(e.nome), 'Nenhum') AS elementos FROM pessoas as p LEFT JOIN pessoa_elemento AS pe ON p.id = pe.pessoa_id LEFT JOIN elementos AS e ON pe.elemento_id = e.id GROUP BY p.id; +--------+--------------------+ | nome | elementos | +--------+--------------------+ | Aang | Fogo,Agua,Terra,Ar | | Katara | Agua | | Sokka | Nenhum | | Zuko | Fogo | | Toph | Terra | | Paku | Agua | | Suki | Nenhum | | Iron | Fogo | | Hakoda | Nenhum | | Roku | Fogo,Agua,Terra,Ar | | kyoshi | Fogo,Agua,Terra,Ar | +--------+--------------------+","title":"Concatenando as respostas de uma agrega\u00e7\u00e3o"},{"location":"ADS/2022/BD2/02%20-%20revis%C3%A3o%20select/#atividades","text":"Crie uma consulta para descobrir quais pessoas n\u00e3o dominam nenhum elemento. Crie uma consulta para descobrir quantas pessoas participaram de duas ou mais transa\u00e7\u00f5es comerciais. Crie uma consulta para mostrar quanto cada na\u00e7\u00e3o vendeu (a soma das vendas das pessoas da na\u00e7\u00e3o).","title":"Atividades"},{"location":"ADS/2022/BD2/02%20-%20revis%C3%A3o%20select/#desafio-boa-de-prova","text":"Crie uma consulta para listar a \"balan\u00e7a comercia\" de cada uma das pessoas, mostrando o total do valor de compras, de vendas e a diferen\u00e7a entre eles. Como no exemplo abaixo. +--------+--------------+---------------+-----------+ | Nome | Total_Vendas | Total_Compras | Resultado | +--------+--------------+---------------+-----------+ | Aang | 25 | 0 | 25 | | Hakoda | 59 | 0 | 59 | | Iron | 0 | 0 | 0 | | Katara | 56 | 57 | -1 | | kyoshi | 0 | 0 | 0 | | Paku | 0 | 22 | -22 | | Roku | 0 | 0 | 0 | | Sokka | 110 | 0 | 110 | | Suki | 0 | 10 | -10 | | Toph | 22 | 115 | -93 | | Zuko | 32 | 100 | -68 | +--------+--------------+---------------+-----------+","title":"Desafio \"Boa de prova ;)\""},{"location":"ADS/2022/BD2/03%20-%20join_e_agregacao/","text":"Join e agrega\u00e7\u00e3o Banco de dados Nessa aula vamos utilizar esse banco de dados: empresa.sql Join Utilizamos o JOIN quando queremos juntar lado a lado duas tabelas. Normalmente fazemos isso juntando as linhas que possuem alguma rela\u00e7\u00e3o entre elas. No nosso banco, se quisermos mostrar o nome dos clientes e das cidades na mesma consulta, temos que juntar as duas tabelas, juntando as linhas onde o id da cidade seja igual ao cidade_id do cliente. Tipos de JOIN N\u00f3s temos alguns tipos de JOINs dispon\u00edveis, e vamos escolher qual utilizar dependendo dos dados que queremos mostrar na consulta. Por padr\u00e3o, o MySQL utiliza o INNER JOIN quando n\u00e3o especificamos qual tipo de join queremos fazer. No inner s\u00f3 ser\u00e3o retornadas as linhas que existem correspondentes nas duas tabelas. Caso n\u00f3 fa\u00e7amos um join entre os clientes e as cidades com esse tipo de join, n\u00e3o ser\u00e3o mostradas as linhas com as cidades que n\u00e3o possuem nenhum cliente, nem as linhas dos clientes que n\u00e3o possuem cidade(nesse banco a cidade n\u00e3o pode ser nula, ent\u00e3o isso n\u00e3o vai acontecer). SELECT cli.nome, cid.nome FROM clientes AS cli JOIN cidades AS cid ON cli.cidade_id = cid.id; +---------------+----------+ | nome | nome | +---------------+----------+ | Joao | Umuarama | | Ze | Umuarama | | Maria | Umuarama | | Bob esponja | Umuarama | | Goku | Maringa | | Bulma | Maringa | | Leia | Londrina | | Luke | Londrina | | Anakin | Londrina | | Tony Gordo | Cascavel | | Aldo o apache | Xambre | | Hans Landa | Xambre | +---------------+----------+ Caso queiramos manter na resposta as cidades que n\u00e3o possuem nenhum cliente, podemos utilizar o RIGHT ou o LEFT JOIN, dependendo do lado onde a tabela est\u00e1. Na consulta anterior, a cidade estava no lado direito, ent\u00e3o podemos utilizar o RIGHT JOIN. Agora aparecem cidades com clientes NULL. SELECT cli.nome, cid.nome FROM clientes AS cli RIGHT JOIN cidades AS cid ON cli.cidade_id = cid.id; +---------------+----------------+ | nome | nome | +---------------+----------------+ | Tony Gordo | Cascavel | | NULL | Cedro | | Leia | Londrina | | Luke | Londrina | | Anakin | Londrina | | Goku | Maringa | | Bulma | Maringa | | NULL | Mundo Novo | | NULL | Navirai | | NULL | Nova Andradina | | NULL | Toledo | | Joao | Umuarama | | Ze | Umuarama | | Maria | Umuarama | | Bob esponja | Umuarama | | Aldo o apache | Xambre | | Hans Landa | Xambre | +---------------+----------------+ Um \u00faltimo join interessante \u00e9 quando queremos retornar apenas a linhas de uma tabela quando n\u00e3o existirem rela\u00e7\u00f5es entre ela e a outra tabela. Por exemplo, se quisermos mostrar todas as cidades que n\u00e3o possuem clientes, posemos fazer a sequinte consulta: SELECT cid.nome FROM cidades AS cid LEFT JOIN clientes AS cli ON cid.id = cli.cidade_id WHERE cli.id IS NULL; +----------------+ | nome | +----------------+ | Cedro | | Mundo Novo | | Navirai | | Nova Andradina | | Toledo | +----------------+ Agrega\u00e7\u00e3o A agrega\u00e7\u00e3o \u00e9 uma fun\u00e7\u00e3o muito \u00fatil do SQL que nos permite juntar as linhas que possuem alguma informa\u00e7\u00e3o em comum em uma \u00fanica linha. Com isso, podemos fazer opera\u00e7\u00f5es com os dados dessas linhas que foram \"juntadas\" e obter informa\u00e7\u00f5es como a quantidade de linhas que se juntaram, a soma ou a m\u00e9dia de algum valor ou fazer alguma opera\u00e7\u00e3o com esses valores. GROUP BY Para fazer a agrega\u00e7\u00e3o, utilizamos o GROUP BY e passamos uma ou mais colunas. Todas as linhas que essas colunas possuirem o mesmo valor sej\u00e3o unidas em uma \u00fanica linha. Caso passemos mais de uma linha, todas devem ter o mesmo valor para que as linhas sejam unidas. Vamos come\u00e7ar fazendo uma agrega\u00e7\u00e3o apenas com a tabela vendas. Vamos juntar todas as vendas que aconteceram no mesmo dia. SELECT * FROM vendas as v GROUP BY v.data_operacao; +----+------------+-------------+------------+---------------+ | id | cliente_id | valor_total | valor_pago | data_operacao | +----+------------+-------------+------------+---------------+ | 1 | 1 | 100 | 20 | 2022-01-01 | | 2 | 2 | 200 | 120 | 2022-02-01 | | 3 | 2 | 300 | 245 | 2022-03-01 | | 4 | 5 | 200 | 200 | 2022-04-01 | +----+------------+-------------+------------+---------------+ Reparem que o MySQL pega as informa\u00e7\u00f5es da primeira linha de cada grupo. Alguns bancos n\u00e3o permitem que mostremos colunas que n\u00e3o estejam no GROUP BY ou sejam usadas por alguma fun\u00e7\u00e3o. Se quisermos juntar as linhas que possuem a mesma data e o mesmo valor total, podemos fazer essa consulta: SELECT * FROM vendas as v GROUP BY v.data_operacao, valor_total; +----+------------+-------------+------------+---------------+ | id | cliente_id | valor_total | valor_pago | data_operacao | +----+------------+-------------+------------+---------------+ | 1 | 1 | 100 | 20 | 2022-01-01 | | 9 | 3 | 300 | 220 | 2022-01-01 | | 10 | 3 | 100 | 90 | 2022-02-01 | | 2 | 2 | 200 | 120 | 2022-02-01 | | 6 | 5 | 300 | 80 | 2022-02-01 | | 19 | 12 | 100 | 20 | 2022-03-01 | | 7 | 7 | 200 | 120 | 2022-03-01 | | 3 | 2 | 300 | 245 | 2022-03-01 | | 4 | 5 | 200 | 200 | 2022-04-01 | +----+------------+-------------+------------+---------------+ Fun\u00e7\u00f5es de agrega\u00e7\u00e3o S\u00e3o fun\u00e7\u00f5es que recebem valores de uma coluna do grupo e retorna um \u00fanico valor. MAX(coluna): Retorna o maior valor que existir nessa coluna para o grupo. MIN(coluna): Retorna o menor valor que existir nessa coluna para o grupo. SUM(coluna): Retorna a soma de todos os valores da coluna no grupo. AVG(coluna): Retorna a m\u00e9dia de todos os valores da coluna no grupo. COUNT(coluna): Retorna a quantidade de valores existentes (n\u00e3o nulos) para essa coluna no grupo. Vamos testar isso agrupando as vendas por data e mostrando o m\u00ednimo, m\u00e1ximo e m\u00e9dia do valor_total das opera\u00e7\u00f5es na data: SELECT data_operacao AS 'data', MIN(valor_total) AS 'menor valor', MAX(valor_total) as 'maior valor', AVG(valor_total) as 'valor medio' FROM vendas as v GROUP BY v.data_operacao; +------------+-------------+-------------+-------------+ | data | menor valor | maior valor | valor medio | +------------+-------------+-------------+-------------+ | 2022-01-01 | 100 | 300 | 150 | | 2022-02-01 | 100 | 300 | 200 | | 2022-03-01 | 100 | 300 | 200 | | 2022-04-01 | 200 | 200 | 200 | +------------+-------------+-------------+-------------+ HAVING O having funciona como um WHERE onde podemos fazer condi\u00e7\u00f5es com as fun\u00e7\u00f5e de agrega\u00e7\u00e3o. Na consulta anterior, se quisermos apenas os dias que o valor m\u00e9dia seja igual ou maior que 200, podemos utilizar o having. SELECT data_operacao AS 'data', MIN(valor_total) AS 'menor valor', MAX(valor_total) as 'maior valor', AVG(valor_total) as 'valor medio' FROM vendas as v GROUP BY v.data_operacao HAVING AVG(valor_total) >= 200; +------------+-------------+-------------+-------------+ | data | menor valor | maior valor | valor medio | +------------+-------------+-------------+-------------+ | 2022-02-01 | 100 | 300 | 200 | | 2022-03-01 | 100 | 300 | 200 | | 2022-04-01 | 200 | 200 | 200 | +------------+-------------+-------------+-------------+ Exemplos Caso voc\u00ea tenha que mandar o seu \"cobrador\" para uma cidade, como podemos descobrir onde temos mais dinheiro a receber? SELECT cid.*, SUM(v.valor_total - v.valor_pago) AS 'divida' FROM cidades AS cid JOIN clientes AS cli ON cid.id = cli.cidade_id JOIN vendas AS v ON v.cliente_id = cli.id GROUP BY cid.id ORDER BY divida desc; +----+----------+--------+ | id | nome | divida | +----+----------+--------+ | 1 | Umuarama | 720 | | 2 | Maringa | 610 | | 5 | Xambre | 210 | | 3 | Londrina | 80 | | 4 | Cascavel | 40 | +----+----------+--------+ Atividades Utilizando o banco desta aula, fa\u00e7a as seguintes consultas: Mostre uma lista das cidades que a empresa possui algum cliente. Mostre a quantidade de clientes que a empresa possui em cada cidade. +----------------+---------------------+ | cidade | quantidade_clientes | +----------------+---------------------+ | Umuarama | 4 | | Maringa | 2 | | Londrina | 3 | | Cascavel | 1 | | Xambre | 2 | | Toledo | 0 | | Navirai | 0 | | Mundo Novo | 0 | | Nova Andradina | 0 | | Cedro | 0 | +----------------+---------------------+ Mostre a quantidade de compras que cada cliente fez. Mostre o valor m\u00e9dio das compras por cidade, em ordem decrescente. A empresa quer descobrir quem \u00e9 o melhor cliente(maior soma das compras) de janeiro em cada cidade para mandar um presente. Como podemos fazer uma consulta para ajudar o gerente nessa tarefa?","title":"Join e agrega\u00e7\u00e3o"},{"location":"ADS/2022/BD2/03%20-%20join_e_agregacao/#join-e-agregacao","text":"","title":"Join e agrega\u00e7\u00e3o"},{"location":"ADS/2022/BD2/03%20-%20join_e_agregacao/#banco-de-dados","text":"Nessa aula vamos utilizar esse banco de dados: empresa.sql","title":"Banco de dados"},{"location":"ADS/2022/BD2/03%20-%20join_e_agregacao/#join","text":"Utilizamos o JOIN quando queremos juntar lado a lado duas tabelas. Normalmente fazemos isso juntando as linhas que possuem alguma rela\u00e7\u00e3o entre elas. No nosso banco, se quisermos mostrar o nome dos clientes e das cidades na mesma consulta, temos que juntar as duas tabelas, juntando as linhas onde o id da cidade seja igual ao cidade_id do cliente.","title":"Join"},{"location":"ADS/2022/BD2/03%20-%20join_e_agregacao/#tipos-de-join","text":"N\u00f3s temos alguns tipos de JOINs dispon\u00edveis, e vamos escolher qual utilizar dependendo dos dados que queremos mostrar na consulta. Por padr\u00e3o, o MySQL utiliza o INNER JOIN quando n\u00e3o especificamos qual tipo de join queremos fazer. No inner s\u00f3 ser\u00e3o retornadas as linhas que existem correspondentes nas duas tabelas. Caso n\u00f3 fa\u00e7amos um join entre os clientes e as cidades com esse tipo de join, n\u00e3o ser\u00e3o mostradas as linhas com as cidades que n\u00e3o possuem nenhum cliente, nem as linhas dos clientes que n\u00e3o possuem cidade(nesse banco a cidade n\u00e3o pode ser nula, ent\u00e3o isso n\u00e3o vai acontecer). SELECT cli.nome, cid.nome FROM clientes AS cli JOIN cidades AS cid ON cli.cidade_id = cid.id; +---------------+----------+ | nome | nome | +---------------+----------+ | Joao | Umuarama | | Ze | Umuarama | | Maria | Umuarama | | Bob esponja | Umuarama | | Goku | Maringa | | Bulma | Maringa | | Leia | Londrina | | Luke | Londrina | | Anakin | Londrina | | Tony Gordo | Cascavel | | Aldo o apache | Xambre | | Hans Landa | Xambre | +---------------+----------+ Caso queiramos manter na resposta as cidades que n\u00e3o possuem nenhum cliente, podemos utilizar o RIGHT ou o LEFT JOIN, dependendo do lado onde a tabela est\u00e1. Na consulta anterior, a cidade estava no lado direito, ent\u00e3o podemos utilizar o RIGHT JOIN. Agora aparecem cidades com clientes NULL. SELECT cli.nome, cid.nome FROM clientes AS cli RIGHT JOIN cidades AS cid ON cli.cidade_id = cid.id; +---------------+----------------+ | nome | nome | +---------------+----------------+ | Tony Gordo | Cascavel | | NULL | Cedro | | Leia | Londrina | | Luke | Londrina | | Anakin | Londrina | | Goku | Maringa | | Bulma | Maringa | | NULL | Mundo Novo | | NULL | Navirai | | NULL | Nova Andradina | | NULL | Toledo | | Joao | Umuarama | | Ze | Umuarama | | Maria | Umuarama | | Bob esponja | Umuarama | | Aldo o apache | Xambre | | Hans Landa | Xambre | +---------------+----------------+ Um \u00faltimo join interessante \u00e9 quando queremos retornar apenas a linhas de uma tabela quando n\u00e3o existirem rela\u00e7\u00f5es entre ela e a outra tabela. Por exemplo, se quisermos mostrar todas as cidades que n\u00e3o possuem clientes, posemos fazer a sequinte consulta: SELECT cid.nome FROM cidades AS cid LEFT JOIN clientes AS cli ON cid.id = cli.cidade_id WHERE cli.id IS NULL; +----------------+ | nome | +----------------+ | Cedro | | Mundo Novo | | Navirai | | Nova Andradina | | Toledo | +----------------+","title":"Tipos de JOIN"},{"location":"ADS/2022/BD2/03%20-%20join_e_agregacao/#agregacao","text":"A agrega\u00e7\u00e3o \u00e9 uma fun\u00e7\u00e3o muito \u00fatil do SQL que nos permite juntar as linhas que possuem alguma informa\u00e7\u00e3o em comum em uma \u00fanica linha. Com isso, podemos fazer opera\u00e7\u00f5es com os dados dessas linhas que foram \"juntadas\" e obter informa\u00e7\u00f5es como a quantidade de linhas que se juntaram, a soma ou a m\u00e9dia de algum valor ou fazer alguma opera\u00e7\u00e3o com esses valores.","title":"Agrega\u00e7\u00e3o"},{"location":"ADS/2022/BD2/03%20-%20join_e_agregacao/#group-by","text":"Para fazer a agrega\u00e7\u00e3o, utilizamos o GROUP BY e passamos uma ou mais colunas. Todas as linhas que essas colunas possuirem o mesmo valor sej\u00e3o unidas em uma \u00fanica linha. Caso passemos mais de uma linha, todas devem ter o mesmo valor para que as linhas sejam unidas. Vamos come\u00e7ar fazendo uma agrega\u00e7\u00e3o apenas com a tabela vendas. Vamos juntar todas as vendas que aconteceram no mesmo dia. SELECT * FROM vendas as v GROUP BY v.data_operacao; +----+------------+-------------+------------+---------------+ | id | cliente_id | valor_total | valor_pago | data_operacao | +----+------------+-------------+------------+---------------+ | 1 | 1 | 100 | 20 | 2022-01-01 | | 2 | 2 | 200 | 120 | 2022-02-01 | | 3 | 2 | 300 | 245 | 2022-03-01 | | 4 | 5 | 200 | 200 | 2022-04-01 | +----+------------+-------------+------------+---------------+ Reparem que o MySQL pega as informa\u00e7\u00f5es da primeira linha de cada grupo. Alguns bancos n\u00e3o permitem que mostremos colunas que n\u00e3o estejam no GROUP BY ou sejam usadas por alguma fun\u00e7\u00e3o. Se quisermos juntar as linhas que possuem a mesma data e o mesmo valor total, podemos fazer essa consulta: SELECT * FROM vendas as v GROUP BY v.data_operacao, valor_total; +----+------------+-------------+------------+---------------+ | id | cliente_id | valor_total | valor_pago | data_operacao | +----+------------+-------------+------------+---------------+ | 1 | 1 | 100 | 20 | 2022-01-01 | | 9 | 3 | 300 | 220 | 2022-01-01 | | 10 | 3 | 100 | 90 | 2022-02-01 | | 2 | 2 | 200 | 120 | 2022-02-01 | | 6 | 5 | 300 | 80 | 2022-02-01 | | 19 | 12 | 100 | 20 | 2022-03-01 | | 7 | 7 | 200 | 120 | 2022-03-01 | | 3 | 2 | 300 | 245 | 2022-03-01 | | 4 | 5 | 200 | 200 | 2022-04-01 | +----+------------+-------------+------------+---------------+","title":"GROUP BY"},{"location":"ADS/2022/BD2/03%20-%20join_e_agregacao/#funcoes-de-agregacao","text":"S\u00e3o fun\u00e7\u00f5es que recebem valores de uma coluna do grupo e retorna um \u00fanico valor. MAX(coluna): Retorna o maior valor que existir nessa coluna para o grupo. MIN(coluna): Retorna o menor valor que existir nessa coluna para o grupo. SUM(coluna): Retorna a soma de todos os valores da coluna no grupo. AVG(coluna): Retorna a m\u00e9dia de todos os valores da coluna no grupo. COUNT(coluna): Retorna a quantidade de valores existentes (n\u00e3o nulos) para essa coluna no grupo. Vamos testar isso agrupando as vendas por data e mostrando o m\u00ednimo, m\u00e1ximo e m\u00e9dia do valor_total das opera\u00e7\u00f5es na data: SELECT data_operacao AS 'data', MIN(valor_total) AS 'menor valor', MAX(valor_total) as 'maior valor', AVG(valor_total) as 'valor medio' FROM vendas as v GROUP BY v.data_operacao; +------------+-------------+-------------+-------------+ | data | menor valor | maior valor | valor medio | +------------+-------------+-------------+-------------+ | 2022-01-01 | 100 | 300 | 150 | | 2022-02-01 | 100 | 300 | 200 | | 2022-03-01 | 100 | 300 | 200 | | 2022-04-01 | 200 | 200 | 200 | +------------+-------------+-------------+-------------+","title":"Fun\u00e7\u00f5es de agrega\u00e7\u00e3o"},{"location":"ADS/2022/BD2/03%20-%20join_e_agregacao/#having","text":"O having funciona como um WHERE onde podemos fazer condi\u00e7\u00f5es com as fun\u00e7\u00f5e de agrega\u00e7\u00e3o. Na consulta anterior, se quisermos apenas os dias que o valor m\u00e9dia seja igual ou maior que 200, podemos utilizar o having. SELECT data_operacao AS 'data', MIN(valor_total) AS 'menor valor', MAX(valor_total) as 'maior valor', AVG(valor_total) as 'valor medio' FROM vendas as v GROUP BY v.data_operacao HAVING AVG(valor_total) >= 200; +------------+-------------+-------------+-------------+ | data | menor valor | maior valor | valor medio | +------------+-------------+-------------+-------------+ | 2022-02-01 | 100 | 300 | 200 | | 2022-03-01 | 100 | 300 | 200 | | 2022-04-01 | 200 | 200 | 200 | +------------+-------------+-------------+-------------+","title":"HAVING"},{"location":"ADS/2022/BD2/03%20-%20join_e_agregacao/#exemplos","text":"Caso voc\u00ea tenha que mandar o seu \"cobrador\" para uma cidade, como podemos descobrir onde temos mais dinheiro a receber? SELECT cid.*, SUM(v.valor_total - v.valor_pago) AS 'divida' FROM cidades AS cid JOIN clientes AS cli ON cid.id = cli.cidade_id JOIN vendas AS v ON v.cliente_id = cli.id GROUP BY cid.id ORDER BY divida desc; +----+----------+--------+ | id | nome | divida | +----+----------+--------+ | 1 | Umuarama | 720 | | 2 | Maringa | 610 | | 5 | Xambre | 210 | | 3 | Londrina | 80 | | 4 | Cascavel | 40 | +----+----------+--------+","title":"Exemplos"},{"location":"ADS/2022/BD2/03%20-%20join_e_agregacao/#atividades","text":"Utilizando o banco desta aula, fa\u00e7a as seguintes consultas: Mostre uma lista das cidades que a empresa possui algum cliente. Mostre a quantidade de clientes que a empresa possui em cada cidade. +----------------+---------------------+ | cidade | quantidade_clientes | +----------------+---------------------+ | Umuarama | 4 | | Maringa | 2 | | Londrina | 3 | | Cascavel | 1 | | Xambre | 2 | | Toledo | 0 | | Navirai | 0 | | Mundo Novo | 0 | | Nova Andradina | 0 | | Cedro | 0 | +----------------+---------------------+ Mostre a quantidade de compras que cada cliente fez. Mostre o valor m\u00e9dio das compras por cidade, em ordem decrescente. A empresa quer descobrir quem \u00e9 o melhor cliente(maior soma das compras) de janeiro em cada cidade para mandar um presente. Como podemos fazer uma consulta para ajudar o gerente nessa tarefa?","title":"Atividades"},{"location":"ADS/2022/BD2/04%20-%20Visoes/","text":"Vis\u00f5es Banco de dados Nessa aula vamos utilizar esse banco de dados: empresa_2.sql Vis\u00f5es As vis\u00f5es s\u00e3o estruturas que s\u00e3o criadas no banco de dados utilizando uma consulta como base. Elas s\u00e3o como tabelas virtuais. Podemos utilizar elas para facilitar consultas ou gerar relat\u00f3rios. Por exemplo, sempre que quisermos ter os dados do cliente no nosso exemplo junto com o nome da cidade dele, precisamos fazer um JOIN. Mas se tiv\u00e9ssemos uma tabela com as seguintes informa\u00e7\u00f5es: +---------------+----------+ | nome | cidade | +---------------+----------+ | Joao | Umuarama | | Ze | Umuarama | | Maria | Umuarama | | Bob esponja | Umuarama | | Goku | Maringa | | Bulma | Maringa | | Leia | Londrina | | Luke | Londrina | | Anakin | Londrina | | Tony Gordo | Cascavel | | Aldo o apache | Xambre | | Hans Landa | Xambre | +---------------+----------+ Poderiamos Vis\u00f5es materializadas O MySQL n\u00e3o suporta esse tipo de vis\u00e3o, mas outros bancos podem suportar. S\u00e3o semelhantes \u00e0s vis\u00f5es normais, mas elas s\u00e3o armazenadas no disco quando s\u00e3o criadas. O banco realiza a consulta que cria ela e armazena o resultado como se fosse uma tabela. Os dados que ficam nesse tipo de view s\u00e3o os do momento que elas s\u00e3o criadas. Caso queiramos atualizar, temos que utilizar comandos para recarregar ela. Criando uma VIEW Criar uma view \u00e9 f\u00e1cil como voar, s\u00f3 precisamos utilizar essa estrutura: CREATE VIEW minha_view AS ALGUM_SELECT Onde o ALGUM_SELECT \u00e9 uma consulta e o minha_view \u00e9 o nome da view. Podemos utilizar essa view como se fosse uma tabela com esse nome em um from de uma consulta. Dados dos clientes em uma \"tabela\" Se em algum lugar do nosso sistema, precisarmos mostrar a idade dos clientes, podemos fazer essa consulta assim: SELECT *, TIMESTAMPDIFF(YEAR, data_nascimento, CURDATE()) AS 'idade' FROM clientes; Nesse caso, estamos fazendo um c\u00e1lculo com apenas 1 atributo, se tivermos mais informa\u00e7\u00f5es diferentes para pegarmos dos clientes, essa consulta pode ficar grande, n\u00e3o sendo legal colocar ela no nosso c\u00f3digo do backend. Podemos criar uma vis\u00e3o com mais dados do cliente com o c\u00f3digo abaixo: CREATE VIEW clientes_relatorio AS SELECT cli.nome AS 'nome', cid.nome AS 'cidade', COUNT(ve.valor_total) AS 'venda', COALESCE(SUM(valor_total), 0) AS 'valor_vendas', COALESCE(SUM(valor_total - valor_pago),0) AS 'valor_a_pagar', TIMESTAMPDIFF(YEAR, data_nascimento, CURDATE()) AS 'idade' FROM clientes AS cli JOIN cidades AS cid ON cli.cidade_id = cid.id LEFT JOIN vendas AS ve ON ve.cliente_id = cli.id GROUP BY cli.id; Assim podemos ter todos v\u00e1rios dados dos nossos clientes de uma forma mais f\u00e1cil, como se existisse uma tabela com esse dados. Podemos rodar o comando abaixo e ter todos esse dados. SELECT * FROM clientes_relatorio; +---------------+----------+-------+--------------+---------------+-------+ | nome | cidade | venda | valor_vendas | valor_a_pagar | idade | +---------------+----------+-------+--------------+---------------+-------+ | Joao | Umuarama | 2 | 300 | 135 | 30 | | Ze | Umuarama | 4 | 1000 | 395 | 22 | | Maria | Umuarama | 3 | 500 | 140 | 11 | | Bob esponja | Umuarama | 1 | 200 | 50 | 25 | | Goku | Maringa | 4 | 900 | 580 | 16 | | Bulma | Maringa | 1 | 100 | 30 | 22 | | Leia | Londrina | 1 | 200 | 80 | 16 | | Luke | Londrina | 0 | 0 | 0 | 18 | | Anakin | Londrina | 0 | 0 | 0 | 1821 | | Tony Gordo | Cascavel | 1 | 100 | 40 | 9 | | Aldo o apache | Xambre | 1 | 200 | 130 | 30 | | Hans Landa | Xambre | 1 | 100 | 80 | 30 | +---------------+----------+-------+--------------+---------------+-------+ Essa nova vis\u00e3o que criamos se comporta como uma tabela, ent\u00e3o, se quisermos encontrar os clientes com idade menor que 18 para enviarmos presentes do dia da crian\u00e7a, podemos fazer por essa vis\u00e3o. SELECT * FROM clientes_relatorio WHERE idade < 18; +------------+----------+-------+--------------+---------------+-------+ | nome | cidade | venda | valor_vendas | valor_a_pagar | idade | +------------+----------+-------+--------------+---------------+-------+ | Maria | Umuarama | 3 | 500 | 140 | 11 | | Goku | Maringa | 4 | 900 | 580 | 16 | | Leia | Londrina | 1 | 200 | 80 | 16 | | Tony Gordo | Cascavel | 1 | 100 | 40 | 9 | +------------+----------+-------+--------------+---------------+-------+ Atividade Dica: fa\u00e7a o select primeiro, quando tiver o select que funcione, crie a view. crie uma vis\u00e3o contendo o nome do cliente e o nome da cidade. select * from visao; +---------------+----------+ | nome | cidade | +---------------+----------+ | Joao | Umuarama | | Ze | Umuarama | | Maria | Umuarama | | Bob esponja | Umuarama | | Goku | Maringa | | Bulma | Maringa | | Leia | Londrina | | Luke | Londrina | | Anakin | Londrina | | Tony Gordo | Cascavel | | Aldo o apache | Xambre | | Hans Landa | Xambre | +---------------+----------+ Crie uma vis\u00e3o contendo as vendas com o nome do cliente, o valor total e o valor a receber. select * from visao; +---------------+-------------+---------------+ | nome | valor_total | valor_a_pagar | +---------------+-------------+---------------+ | Joao | 100 | 80 | | Ze | 200 | 80 | | Ze | 300 | 55 | | Goku | 200 | 0 | | Bulma | 100 | 30 | | Goku | 300 | 220 | | Leia | 200 | 80 | | Goku | 200 | 180 | | Maria | 300 | 80 | | Maria | 100 | 10 | | Ze | 200 | 80 | | Joao | 200 | 55 | | Ze | 300 | 180 | | Bob esponja | 200 | 50 | | Goku | 200 | 180 | | Maria | 100 | 50 | | Tony Gordo | 100 | 40 | | Aldo o apache | 200 | 130 | | Hans Landa | 100 | 80 | +---------------+-------------+---------------+ Crie uma vis\u00e3o contendo o nome das cidades, quantidade de clientes na cidade, total de vendas na cidade e valor que temos a receber em cada cidade. select * from visao; +----------------+---------------------+-------------------+ | nome | quantidade_clientes | quantidade_vendas | +----------------+---------------------+-------------------+ | Umuarama | 4 | 10 | | Maringa | 2 | 5 | | Londrina | 3 | 1 | | Cascavel | 1 | 1 | | Xambre | 2 | 2 | | Toledo | 0 | 0 | | Navirai | 0 | 0 | | Mundo Novo | 0 | 0 | | Nova Andradina | 0 | 0 | | Cedro | 0 | 0 | +----------------+---------------------+-------------------+","title":"Vis\u00f5es"},{"location":"ADS/2022/BD2/04%20-%20Visoes/#visoes","text":"","title":"Vis\u00f5es"},{"location":"ADS/2022/BD2/04%20-%20Visoes/#banco-de-dados","text":"Nessa aula vamos utilizar esse banco de dados: empresa_2.sql","title":"Banco de dados"},{"location":"ADS/2022/BD2/04%20-%20Visoes/#visoes_1","text":"As vis\u00f5es s\u00e3o estruturas que s\u00e3o criadas no banco de dados utilizando uma consulta como base. Elas s\u00e3o como tabelas virtuais. Podemos utilizar elas para facilitar consultas ou gerar relat\u00f3rios. Por exemplo, sempre que quisermos ter os dados do cliente no nosso exemplo junto com o nome da cidade dele, precisamos fazer um JOIN. Mas se tiv\u00e9ssemos uma tabela com as seguintes informa\u00e7\u00f5es: +---------------+----------+ | nome | cidade | +---------------+----------+ | Joao | Umuarama | | Ze | Umuarama | | Maria | Umuarama | | Bob esponja | Umuarama | | Goku | Maringa | | Bulma | Maringa | | Leia | Londrina | | Luke | Londrina | | Anakin | Londrina | | Tony Gordo | Cascavel | | Aldo o apache | Xambre | | Hans Landa | Xambre | +---------------+----------+ Poderiamos","title":"Vis\u00f5es"},{"location":"ADS/2022/BD2/04%20-%20Visoes/#visoes-materializadas","text":"O MySQL n\u00e3o suporta esse tipo de vis\u00e3o, mas outros bancos podem suportar. S\u00e3o semelhantes \u00e0s vis\u00f5es normais, mas elas s\u00e3o armazenadas no disco quando s\u00e3o criadas. O banco realiza a consulta que cria ela e armazena o resultado como se fosse uma tabela. Os dados que ficam nesse tipo de view s\u00e3o os do momento que elas s\u00e3o criadas. Caso queiramos atualizar, temos que utilizar comandos para recarregar ela.","title":"Vis\u00f5es materializadas"},{"location":"ADS/2022/BD2/04%20-%20Visoes/#criando-uma-view","text":"Criar uma view \u00e9 f\u00e1cil como voar, s\u00f3 precisamos utilizar essa estrutura: CREATE VIEW minha_view AS ALGUM_SELECT Onde o ALGUM_SELECT \u00e9 uma consulta e o minha_view \u00e9 o nome da view. Podemos utilizar essa view como se fosse uma tabela com esse nome em um from de uma consulta.","title":"Criando uma VIEW"},{"location":"ADS/2022/BD2/04%20-%20Visoes/#dados-dos-clientes-em-uma-tabela","text":"Se em algum lugar do nosso sistema, precisarmos mostrar a idade dos clientes, podemos fazer essa consulta assim: SELECT *, TIMESTAMPDIFF(YEAR, data_nascimento, CURDATE()) AS 'idade' FROM clientes; Nesse caso, estamos fazendo um c\u00e1lculo com apenas 1 atributo, se tivermos mais informa\u00e7\u00f5es diferentes para pegarmos dos clientes, essa consulta pode ficar grande, n\u00e3o sendo legal colocar ela no nosso c\u00f3digo do backend. Podemos criar uma vis\u00e3o com mais dados do cliente com o c\u00f3digo abaixo: CREATE VIEW clientes_relatorio AS SELECT cli.nome AS 'nome', cid.nome AS 'cidade', COUNT(ve.valor_total) AS 'venda', COALESCE(SUM(valor_total), 0) AS 'valor_vendas', COALESCE(SUM(valor_total - valor_pago),0) AS 'valor_a_pagar', TIMESTAMPDIFF(YEAR, data_nascimento, CURDATE()) AS 'idade' FROM clientes AS cli JOIN cidades AS cid ON cli.cidade_id = cid.id LEFT JOIN vendas AS ve ON ve.cliente_id = cli.id GROUP BY cli.id; Assim podemos ter todos v\u00e1rios dados dos nossos clientes de uma forma mais f\u00e1cil, como se existisse uma tabela com esse dados. Podemos rodar o comando abaixo e ter todos esse dados. SELECT * FROM clientes_relatorio; +---------------+----------+-------+--------------+---------------+-------+ | nome | cidade | venda | valor_vendas | valor_a_pagar | idade | +---------------+----------+-------+--------------+---------------+-------+ | Joao | Umuarama | 2 | 300 | 135 | 30 | | Ze | Umuarama | 4 | 1000 | 395 | 22 | | Maria | Umuarama | 3 | 500 | 140 | 11 | | Bob esponja | Umuarama | 1 | 200 | 50 | 25 | | Goku | Maringa | 4 | 900 | 580 | 16 | | Bulma | Maringa | 1 | 100 | 30 | 22 | | Leia | Londrina | 1 | 200 | 80 | 16 | | Luke | Londrina | 0 | 0 | 0 | 18 | | Anakin | Londrina | 0 | 0 | 0 | 1821 | | Tony Gordo | Cascavel | 1 | 100 | 40 | 9 | | Aldo o apache | Xambre | 1 | 200 | 130 | 30 | | Hans Landa | Xambre | 1 | 100 | 80 | 30 | +---------------+----------+-------+--------------+---------------+-------+ Essa nova vis\u00e3o que criamos se comporta como uma tabela, ent\u00e3o, se quisermos encontrar os clientes com idade menor que 18 para enviarmos presentes do dia da crian\u00e7a, podemos fazer por essa vis\u00e3o. SELECT * FROM clientes_relatorio WHERE idade < 18; +------------+----------+-------+--------------+---------------+-------+ | nome | cidade | venda | valor_vendas | valor_a_pagar | idade | +------------+----------+-------+--------------+---------------+-------+ | Maria | Umuarama | 3 | 500 | 140 | 11 | | Goku | Maringa | 4 | 900 | 580 | 16 | | Leia | Londrina | 1 | 200 | 80 | 16 | | Tony Gordo | Cascavel | 1 | 100 | 40 | 9 | +------------+----------+-------+--------------+---------------+-------+","title":"Dados dos clientes em uma \"tabela\""},{"location":"ADS/2022/BD2/04%20-%20Visoes/#atividade","text":"Dica: fa\u00e7a o select primeiro, quando tiver o select que funcione, crie a view. crie uma vis\u00e3o contendo o nome do cliente e o nome da cidade. select * from visao; +---------------+----------+ | nome | cidade | +---------------+----------+ | Joao | Umuarama | | Ze | Umuarama | | Maria | Umuarama | | Bob esponja | Umuarama | | Goku | Maringa | | Bulma | Maringa | | Leia | Londrina | | Luke | Londrina | | Anakin | Londrina | | Tony Gordo | Cascavel | | Aldo o apache | Xambre | | Hans Landa | Xambre | +---------------+----------+ Crie uma vis\u00e3o contendo as vendas com o nome do cliente, o valor total e o valor a receber. select * from visao; +---------------+-------------+---------------+ | nome | valor_total | valor_a_pagar | +---------------+-------------+---------------+ | Joao | 100 | 80 | | Ze | 200 | 80 | | Ze | 300 | 55 | | Goku | 200 | 0 | | Bulma | 100 | 30 | | Goku | 300 | 220 | | Leia | 200 | 80 | | Goku | 200 | 180 | | Maria | 300 | 80 | | Maria | 100 | 10 | | Ze | 200 | 80 | | Joao | 200 | 55 | | Ze | 300 | 180 | | Bob esponja | 200 | 50 | | Goku | 200 | 180 | | Maria | 100 | 50 | | Tony Gordo | 100 | 40 | | Aldo o apache | 200 | 130 | | Hans Landa | 100 | 80 | +---------------+-------------+---------------+ Crie uma vis\u00e3o contendo o nome das cidades, quantidade de clientes na cidade, total de vendas na cidade e valor que temos a receber em cada cidade. select * from visao; +----------------+---------------------+-------------------+ | nome | quantidade_clientes | quantidade_vendas | +----------------+---------------------+-------------------+ | Umuarama | 4 | 10 | | Maringa | 2 | 5 | | Londrina | 3 | 1 | | Cascavel | 1 | 1 | | Xambre | 2 | 2 | | Toledo | 0 | 0 | | Navirai | 0 | 0 | | Mundo Novo | 0 | 0 | | Nova Andradina | 0 | 0 | | Cedro | 0 | 0 | +----------------+---------------------+-------------------+","title":"Atividade"},{"location":"ADS/2022/BD2/05%20-%20lista_prova/","text":"Lista de revis\u00e3o para a prova Banco de dados Nessa aula vamos utilizar esse banco de dados: star_wars.sql Explica\u00e7\u00f5es Nessa banco temos uma batalha nas guerras clonicas do universo de star wars. exercitos: S\u00e3o os exercitos que participaram da batalha, a Rep\u00fablica e a Federa\u00e7\u00e3o do com\u00e9rcio. tropas: S\u00e3o os soldados que est\u00e3o na batalha. Eles devem pertencer a um exercito. frentes: S\u00e3o as frentes de batalha. Em uma batalha podem existir mais de uma frente e uma tropa deve estar em algum deles. tipo de tropa: S\u00e3o os tipos das tropas em batalha e a for\u00e7a que elas possuem. situa\u00e7\u00e3o da tropa: As tropas podem estar ativas ou inativas. As ativas ainda est\u00e3o aptas ao combate. Lista Utilizando esse banco, crie: Uma view que mostre quantas tropas no total cada exercito possui(sem detalhar se est\u00e1 ativa ou inativa). select * from visao; +-----------+-------------------+ | nome | quantidade_tropas | +-----------+-------------------+ | Republica | 20 | | Federacao | 10 | +-----------+-------------------+ Uma view que mostre a quantidade de cada tipo de tropa no combate (sem detalhar se est\u00e1 ativa ou inativa). select * from visao; +-------------+------------+ | tipo_tropas | quantidade | +-------------+------------+ | clones | 18 | | jedy | 2 | | droids | 10 | +-------------+------------+ Uma view que mostre as frentes de combate e a quantidade de soldados ativos em cada uma delas. select * from visao; +-----------+------------+ | frentes | quantidade | +-----------+------------+ | colinas | 11 | | planicies | 9 | +-----------+------------+ Uma view que mostre o nome do exercito, o nome das frentes de batalha e a for\u00e7a soma da for\u00e7a das tropas ativas do exercito nessa frente. select * from visao; +-----------+-----------+-------------+ | exercito | frentes | forca_total | +-----------+-----------+-------------+ | Republica | colinas | 112 | | Republica | planicies | 108 | | Federacao | colinas | 20 | | Federacao | planicies | 20 | +-----------+-----------+-------------+","title":"Lista de revis\u00e3o para a prova"},{"location":"ADS/2022/BD2/05%20-%20lista_prova/#lista-de-revisao-para-a-prova","text":"","title":"Lista de revis\u00e3o para a prova"},{"location":"ADS/2022/BD2/05%20-%20lista_prova/#banco-de-dados","text":"Nessa aula vamos utilizar esse banco de dados: star_wars.sql","title":"Banco de dados"},{"location":"ADS/2022/BD2/05%20-%20lista_prova/#explicacoes","text":"Nessa banco temos uma batalha nas guerras clonicas do universo de star wars. exercitos: S\u00e3o os exercitos que participaram da batalha, a Rep\u00fablica e a Federa\u00e7\u00e3o do com\u00e9rcio. tropas: S\u00e3o os soldados que est\u00e3o na batalha. Eles devem pertencer a um exercito. frentes: S\u00e3o as frentes de batalha. Em uma batalha podem existir mais de uma frente e uma tropa deve estar em algum deles. tipo de tropa: S\u00e3o os tipos das tropas em batalha e a for\u00e7a que elas possuem. situa\u00e7\u00e3o da tropa: As tropas podem estar ativas ou inativas. As ativas ainda est\u00e3o aptas ao combate.","title":"Explica\u00e7\u00f5es"},{"location":"ADS/2022/BD2/05%20-%20lista_prova/#lista","text":"Utilizando esse banco, crie: Uma view que mostre quantas tropas no total cada exercito possui(sem detalhar se est\u00e1 ativa ou inativa). select * from visao; +-----------+-------------------+ | nome | quantidade_tropas | +-----------+-------------------+ | Republica | 20 | | Federacao | 10 | +-----------+-------------------+ Uma view que mostre a quantidade de cada tipo de tropa no combate (sem detalhar se est\u00e1 ativa ou inativa). select * from visao; +-------------+------------+ | tipo_tropas | quantidade | +-------------+------------+ | clones | 18 | | jedy | 2 | | droids | 10 | +-------------+------------+ Uma view que mostre as frentes de combate e a quantidade de soldados ativos em cada uma delas. select * from visao; +-----------+------------+ | frentes | quantidade | +-----------+------------+ | colinas | 11 | | planicies | 9 | +-----------+------------+ Uma view que mostre o nome do exercito, o nome das frentes de batalha e a for\u00e7a soma da for\u00e7a das tropas ativas do exercito nessa frente. select * from visao; +-----------+-----------+-------------+ | exercito | frentes | forca_total | +-----------+-----------+-------------+ | Republica | colinas | 112 | | Republica | planicies | 108 | | Federacao | colinas | 20 | | Federacao | planicies | 20 | +-----------+-----------+-------------+","title":"Lista"},{"location":"ADS/2022/BD2/09%20-%20subqueries1/","text":"Subquery como filtro de uma nova consulta Primeiro problema Vamos pensar que eu tenho um banco de dados com o nome dos alunos e as notas deles em uma prova. Como eu fa\u00e7o um select para retornar apenas os alunos que tiraram notas mensores que a m\u00e9dia da turma? Banco dos alunos: alunos.sql +----+--------+------+ | id | nome | nota | +----+--------+------+ | 1 | Joao | 30 | | 2 | Maria | 60 | | 3 | Jose | 80 | | 4 | Lucas | 45 | | 5 | Marcos | 25 | +----+--------+------+ Utilizando subqueries Podemos colocar comandos de SQL dentro de outros comandos. Anatomia do Select. Subquery como filtro de uma nova consulta Condi\u00e7\u00e3o normal EXISTS IN Exemplos No banco do avatar( avatar.sql ), vamos tentar resolver os seguintes problemas sem utilizar Join: Mostrar as pessoas que n\u00e3o dominam nenhum elemento SELECT p.nome FROM pessoas AS p WHERE EXISTS(SELECT * FROM pessoa_elemento WHERE pessoa_id = p.id); Mostrar as pessoas que dominam algum elemento SELECT p.nome FROM pessoas AS p WHERE NOT EXISTS(SELECT * FROM pessoa_elemento WHERE pessoa_id = p.id); Mostrar as pessoas que s\u00e3o avatares (dominam os 4 elementos) SELECT p.nome FROM pessoas p WHERE (SELECT COUNT(*) FROM pessoa_elemento WHERE pessoa_id = p.id) = 4; Mostrar as pessoas que s\u00e3o de uma na\u00e7\u00e3o que comece com tribo SELECT * FROM pessoas p WHERE p.nacao_id IN (SELECT id FROM nacoes WHERE nome like 'tribo%');","title":"Subquery como filtro de uma nova consulta"},{"location":"ADS/2022/BD2/09%20-%20subqueries1/#subquery-como-filtro-de-uma-nova-consulta","text":"","title":"Subquery como filtro de uma nova consulta"},{"location":"ADS/2022/BD2/09%20-%20subqueries1/#primeiro-problema","text":"Vamos pensar que eu tenho um banco de dados com o nome dos alunos e as notas deles em uma prova. Como eu fa\u00e7o um select para retornar apenas os alunos que tiraram notas mensores que a m\u00e9dia da turma? Banco dos alunos: alunos.sql +----+--------+------+ | id | nome | nota | +----+--------+------+ | 1 | Joao | 30 | | 2 | Maria | 60 | | 3 | Jose | 80 | | 4 | Lucas | 45 | | 5 | Marcos | 25 | +----+--------+------+","title":"Primeiro problema"},{"location":"ADS/2022/BD2/09%20-%20subqueries1/#utilizando-subqueries","text":"Podemos colocar comandos de SQL dentro de outros comandos. Anatomia do Select.","title":"Utilizando subqueries"},{"location":"ADS/2022/BD2/09%20-%20subqueries1/#subquery-como-filtro-de-uma-nova-consulta_1","text":"Condi\u00e7\u00e3o normal EXISTS IN","title":"Subquery como filtro de uma nova consulta"},{"location":"ADS/2022/BD2/09%20-%20subqueries1/#exemplos","text":"No banco do avatar( avatar.sql ), vamos tentar resolver os seguintes problemas sem utilizar Join: Mostrar as pessoas que n\u00e3o dominam nenhum elemento SELECT p.nome FROM pessoas AS p WHERE EXISTS(SELECT * FROM pessoa_elemento WHERE pessoa_id = p.id); Mostrar as pessoas que dominam algum elemento SELECT p.nome FROM pessoas AS p WHERE NOT EXISTS(SELECT * FROM pessoa_elemento WHERE pessoa_id = p.id); Mostrar as pessoas que s\u00e3o avatares (dominam os 4 elementos) SELECT p.nome FROM pessoas p WHERE (SELECT COUNT(*) FROM pessoa_elemento WHERE pessoa_id = p.id) = 4; Mostrar as pessoas que s\u00e3o de uma na\u00e7\u00e3o que comece com tribo SELECT * FROM pessoas p WHERE p.nacao_id IN (SELECT id FROM nacoes WHERE nome like 'tribo%');","title":"Exemplos"},{"location":"ADS/2022/BD2/10%20-%20subqueries%202/","text":"Subquery como uma nova coluna da consulta Exemplos No banco do avatar( avatar.sql ), vamos tentar resolver os seguintes problemas sem utilizar Join: Mostrar quantas pessoas cada na\u00e7\u00e3o possui. SELECT n.nome, (SELECT COUNT(*) FROM pessoas as p where p.nacao_id = n.id) as 'count' FROM nacoes as n; Mostrar quantos elementos cada pessoa domina. SELECT p.nome, (SELECT COUNT(*) FROM pessoa_elemento WHERE pessoa_id = p.id) as quantidade FROM pessoas as p; Mostrar o valor total das compras e das vendas de cada pessoa e sua balan\u00e7a comercial. SELECT nome, total_vendas, total_compras, total_vendas - total_compras as balanco FROM ( SELECT p.nome, (SELECT COALESCE(SUM(c.valor), 0) FROM comercio as c WHERE c.vendedor_id = p.id) as total_vendas, (SELECT COALESCE(SUM(c.valor), 0) FROM comercio as c WHERE c.comprador_id = p.id) as total_compras FROM pessoas as p) as asdsad; Mostrar o nome da pessoa e uma lista dos elementos que ela domina. SELECT p.nome, (SELECT GROUP_CONCAT(e.nome) FROM elementos as e WHERE EXISTS ( SELECT * FROM pessoa_elemento as pe WHERE pe.pessoa_id = p.id AND pe.elemento_id = e.id) ) as elementos FROM pessoas as p;","title":"Subquery como uma nova coluna da consulta"},{"location":"ADS/2022/BD2/10%20-%20subqueries%202/#subquery-como-uma-nova-coluna-da-consulta","text":"","title":"Subquery como uma nova coluna da consulta"},{"location":"ADS/2022/BD2/10%20-%20subqueries%202/#exemplos","text":"No banco do avatar( avatar.sql ), vamos tentar resolver os seguintes problemas sem utilizar Join: Mostrar quantas pessoas cada na\u00e7\u00e3o possui. SELECT n.nome, (SELECT COUNT(*) FROM pessoas as p where p.nacao_id = n.id) as 'count' FROM nacoes as n; Mostrar quantos elementos cada pessoa domina. SELECT p.nome, (SELECT COUNT(*) FROM pessoa_elemento WHERE pessoa_id = p.id) as quantidade FROM pessoas as p; Mostrar o valor total das compras e das vendas de cada pessoa e sua balan\u00e7a comercial. SELECT nome, total_vendas, total_compras, total_vendas - total_compras as balanco FROM ( SELECT p.nome, (SELECT COALESCE(SUM(c.valor), 0) FROM comercio as c WHERE c.vendedor_id = p.id) as total_vendas, (SELECT COALESCE(SUM(c.valor), 0) FROM comercio as c WHERE c.comprador_id = p.id) as total_compras FROM pessoas as p) as asdsad; Mostrar o nome da pessoa e uma lista dos elementos que ela domina. SELECT p.nome, (SELECT GROUP_CONCAT(e.nome) FROM elementos as e WHERE EXISTS ( SELECT * FROM pessoa_elemento as pe WHERE pe.pessoa_id = p.id AND pe.elemento_id = e.id) ) as elementos FROM pessoas as p;","title":"Exemplos"},{"location":"ADS/2022/BD2/11%20-%20triggers/","text":"Triggers 1 Triggers (gatilhos) s\u00e3o c\u00f3digos que s\u00e3o executados quando alguma a\u00e7\u00e3o acontece (INSERT, UPDATE, DELETE) em uma tabela. Eles podem ser chamados antes ou depois da a\u00e7\u00e3o ser realizada. Para cada evento em uma tabela, s\u00f3 pode existir um trigger. O trigger fica salvo no banco. Banco Para essa aula, vamos utilizar o banco banco.sql ). Nele temos um cliente que possui uma conta. Nessa conta podemos fazer opera\u00e7\u00f5es de debito e cr\u00e9dito e opera\u00e7\u00f5es de investimento e resgate desse invertimento. Na conta temos os campos saldo e saldo_investimentos. Sintaxe da Trigger CREATE TRIGGER nome momento evento ON tabela FOR EACH ROW BEGIN /*corpo do c\u00f3digo*/ END NEW e OLD No corpo da trigger temos acesso a dois conjuntos de valores, os valores antigos da linha que o trigger est\u00e1 agindo, e os valores novos, ap\u00f3s a execu\u00e7\u00e3o da trigger. Acessamos eles utilizando o NEW e o OLD. Atualizando os valores do saldo quando uma nova opera\u00e7\u00e3o acontecer. Vamos criar um trigger para atualizar o saldo da conta quando acontecer uma opera\u00e7\u00e3o de cr\u00e9dito ou d\u00e9bito. Opera\u00e7\u00e3o de cr\u00e9dito: DELIMITER $ CREATE OR REPLACE TRIGGER felicidade AFTER INSERT ON creditos FOR EACH ROW BEGIN UPDATE contas SET saldo = saldo + NEW.valor WHERE id = NEW.conta_id; END$ DELIMITER ; Opera\u00e7\u00e3o de d\u00e9bito: DELIMITER $ CREATE OR REPLACE TRIGGER tristeza AFTER INSERT ON debitos FOR EACH ROW BEGIN UPDATE contas SET saldo = saldo - NEW.valor WHERE id = NEW.conta_id; END$ DELIMITER ; Atividades Fazer um trigger que atualize o saldo de invertimentos da conta quando acontecer um novo investimento. Fazer um trigger que atualize o saldo de investimentos da conta quando acontecer um resgate. Fazer um trigger que marque o cliente como especial caso a soma do seu saldo em conta com o saldo de investimentos for maior que 50 mil.","title":"Triggers 1"},{"location":"ADS/2022/BD2/11%20-%20triggers/#triggers-1","text":"Triggers (gatilhos) s\u00e3o c\u00f3digos que s\u00e3o executados quando alguma a\u00e7\u00e3o acontece (INSERT, UPDATE, DELETE) em uma tabela. Eles podem ser chamados antes ou depois da a\u00e7\u00e3o ser realizada. Para cada evento em uma tabela, s\u00f3 pode existir um trigger. O trigger fica salvo no banco.","title":"Triggers 1"},{"location":"ADS/2022/BD2/11%20-%20triggers/#banco","text":"Para essa aula, vamos utilizar o banco banco.sql ). Nele temos um cliente que possui uma conta. Nessa conta podemos fazer opera\u00e7\u00f5es de debito e cr\u00e9dito e opera\u00e7\u00f5es de investimento e resgate desse invertimento. Na conta temos os campos saldo e saldo_investimentos.","title":"Banco"},{"location":"ADS/2022/BD2/11%20-%20triggers/#sintaxe-da-trigger","text":"CREATE TRIGGER nome momento evento ON tabela FOR EACH ROW BEGIN /*corpo do c\u00f3digo*/ END","title":"Sintaxe da Trigger"},{"location":"ADS/2022/BD2/11%20-%20triggers/#new-e-old","text":"No corpo da trigger temos acesso a dois conjuntos de valores, os valores antigos da linha que o trigger est\u00e1 agindo, e os valores novos, ap\u00f3s a execu\u00e7\u00e3o da trigger. Acessamos eles utilizando o NEW e o OLD.","title":"NEW e OLD"},{"location":"ADS/2022/BD2/11%20-%20triggers/#atualizando-os-valores-do-saldo-quando-uma-nova-operacao-acontecer","text":"Vamos criar um trigger para atualizar o saldo da conta quando acontecer uma opera\u00e7\u00e3o de cr\u00e9dito ou d\u00e9bito. Opera\u00e7\u00e3o de cr\u00e9dito: DELIMITER $ CREATE OR REPLACE TRIGGER felicidade AFTER INSERT ON creditos FOR EACH ROW BEGIN UPDATE contas SET saldo = saldo + NEW.valor WHERE id = NEW.conta_id; END$ DELIMITER ; Opera\u00e7\u00e3o de d\u00e9bito: DELIMITER $ CREATE OR REPLACE TRIGGER tristeza AFTER INSERT ON debitos FOR EACH ROW BEGIN UPDATE contas SET saldo = saldo - NEW.valor WHERE id = NEW.conta_id; END$ DELIMITER ;","title":"Atualizando os valores do saldo quando uma nova opera\u00e7\u00e3o acontecer."},{"location":"ADS/2022/BD2/11%20-%20triggers/#atividades","text":"Fazer um trigger que atualize o saldo de invertimentos da conta quando acontecer um novo investimento. Fazer um trigger que atualize o saldo de investimentos da conta quando acontecer um resgate. Fazer um trigger que marque o cliente como especial caso a soma do seu saldo em conta com o saldo de investimentos for maior que 50 mil.","title":"Atividades"},{"location":"ADS/2022/BD2/12%20-%20triggers%20com%20condicoes/","text":"Triggers com condi\u00e7\u00f5es Nessa aula vamos ver triggers com estruturas condicionais (IF). Banco Para essa aula, vamos utilizar o banco banco.sql . Nele temos um cliente que possui uma conta. Nessa conta podemos fazer opera\u00e7\u00f5es de debito e cr\u00e9dito e opera\u00e7\u00f5es de investimento e resgate desse invertimento. Na conta temos os campos saldo e saldo_investimentos. IF em SQL Estrutura do IF: IF condi\u00e7\u00e3o THEN declara\u00e7\u00f5es; END IF; Estutura do IF ELSE: IF condi\u00e7\u00e3o THEN declara\u00e7\u00f5es; ELSE declara\u00e7\u00f5es-else; END IF; IF condi\u00e7\u00e3o THEN statements; ELSEIF condi\u00e7\u00e3o-elseif THEN declara\u00e7\u00f5es-elseif; ... ELSE declara\u00e7\u00f5es-else; END IF; Parando a execu\u00e7\u00e3o de uma query Para pararmos uma query, utilizamos o signal . Valida\u00e7\u00f5es com triggers O valor de uma transa\u00e7\u00e3o (d\u00e9bito, cr\u00e9dito, investimento ou resgate) deve ser maior que zero. DELIMITER $ CREATE OR REPLACE TRIGGER debito_maior_zero BEFORE INSERT ON debitos FOR EACH ROW BEGIN IF NOT NEW.valor > 0 THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Valor tem que ser maior que zero'; END IF; END$ DELIMITER ; Atividades Nesse banco, o cliente n\u00e3o tem cheque especial, ent\u00e3o ele deve possuir saldo em conta para realizar um d\u00e9bito. Crie um trigger para gartir que um d\u00e9bito s\u00f3 seja salvo se o cliente tiver saldo em conta suficiente. Um cliente \u00e9 especial para o banco caso tenha mais do que 50 mil reais em saldo de investimento ou 60 mil reais somando o saldo de investimento com o saldo da conta. Fa\u00e7a uma trigger que atualiza se o cliente \u00e9 especial quando ocorrerem mudan\u00e7as em sua conta.","title":"Triggers com condi\u00e7\u00f5es"},{"location":"ADS/2022/BD2/12%20-%20triggers%20com%20condicoes/#triggers-com-condicoes","text":"Nessa aula vamos ver triggers com estruturas condicionais (IF).","title":"Triggers com condi\u00e7\u00f5es"},{"location":"ADS/2022/BD2/12%20-%20triggers%20com%20condicoes/#banco","text":"Para essa aula, vamos utilizar o banco banco.sql . Nele temos um cliente que possui uma conta. Nessa conta podemos fazer opera\u00e7\u00f5es de debito e cr\u00e9dito e opera\u00e7\u00f5es de investimento e resgate desse invertimento. Na conta temos os campos saldo e saldo_investimentos.","title":"Banco"},{"location":"ADS/2022/BD2/12%20-%20triggers%20com%20condicoes/#if-em-sql","text":"Estrutura do IF: IF condi\u00e7\u00e3o THEN declara\u00e7\u00f5es; END IF; Estutura do IF ELSE: IF condi\u00e7\u00e3o THEN declara\u00e7\u00f5es; ELSE declara\u00e7\u00f5es-else; END IF; IF condi\u00e7\u00e3o THEN statements; ELSEIF condi\u00e7\u00e3o-elseif THEN declara\u00e7\u00f5es-elseif; ... ELSE declara\u00e7\u00f5es-else; END IF;","title":"IF em SQL"},{"location":"ADS/2022/BD2/12%20-%20triggers%20com%20condicoes/#parando-a-execucao-de-uma-query","text":"Para pararmos uma query, utilizamos o signal .","title":"Parando a execu\u00e7\u00e3o de uma query"},{"location":"ADS/2022/BD2/12%20-%20triggers%20com%20condicoes/#validacoes-com-triggers","text":"O valor de uma transa\u00e7\u00e3o (d\u00e9bito, cr\u00e9dito, investimento ou resgate) deve ser maior que zero. DELIMITER $ CREATE OR REPLACE TRIGGER debito_maior_zero BEFORE INSERT ON debitos FOR EACH ROW BEGIN IF NOT NEW.valor > 0 THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Valor tem que ser maior que zero'; END IF; END$ DELIMITER ;","title":"Valida\u00e7\u00f5es com triggers"},{"location":"ADS/2022/BD2/12%20-%20triggers%20com%20condicoes/#atividades","text":"Nesse banco, o cliente n\u00e3o tem cheque especial, ent\u00e3o ele deve possuir saldo em conta para realizar um d\u00e9bito. Crie um trigger para gartir que um d\u00e9bito s\u00f3 seja salvo se o cliente tiver saldo em conta suficiente. Um cliente \u00e9 especial para o banco caso tenha mais do que 50 mil reais em saldo de investimento ou 60 mil reais somando o saldo de investimento com o saldo da conta. Fa\u00e7a uma trigger que atualiza se o cliente \u00e9 especial quando ocorrerem mudan\u00e7as em sua conta.","title":"Atividades"},{"location":"ADS/2022/BD2/13%20-%20revisao_prova/","text":"Revis\u00e3o para prova Depois de muito estudo, voc\u00ea conseguiu um est\u00e1gio no promissor est\u00fadio de jogos GamesSoft do Bill Port\u00f5es e est\u00e1 trabalhando junto a um time de jovens estagi\u00e1rios promissores para entregar o primeiro e disruptivo jogo dessa empresa, o Empire of Ages. No dia da estreia do jogo, inadi\u00e1vel pois a empresa gastou 1000 reais em marketing, descobriram que os estagi\u00e1rios do teste estavam vendo Naruto no hor\u00e1rio de servi\u00e7o, e n\u00e3o testando o jogo. Assim, foram descobertos diversos erros no jogo, a maioria facilmente corrig\u00edveis pelo c\u00f3digo. Mas a vida \u00e9 uma caixinha de surpresas, e os estagi\u00e1rios que sabiam como fazer o deploy do sistema foram em um Happy Hour no dia anterior e n\u00e3o est\u00e3o em condi\u00e7\u00f5es de trabalhar. Nesse caos, sobrou para o estagi\u00e1rio que mexe com o banco, no caso voc\u00ea, salvar o dia. As corre\u00e7\u00f5es devem ser realizadas direto no banco com triggers e views. A sua promo\u00e7\u00e3o para estagi\u00e1rio S\u00eanior, o futuro da GamesSoft e uma pizza grande de sabores promocionais est\u00e3o na sua m\u00e3o. PS: Bill Port\u00f5es nunca entendeu os joins, por isso ele os acha ruins. Voc\u00ea n\u00e3o pode utilizar joins nas suas solu\u00e7\u00f5es. Banco Para essa aula, vamos utilizar o banco empire_ages.sql ). Olhe a defini\u00e7\u00e3o dele e resolva as quest\u00f5es a seguir. Ele cont\u00e9m um usu\u00e1rio, seus recursos, suas unidades e suas constru\u00e7\u00f5es. Primeira lista de corre\u00e7\u00f5es. Uma unidade viva deve estar com o ativo como true e uma unidade que foi derrotada deve estar com o ativo como falso. O sistema deveria tornar inativa qualquer unidade com vida menor ou igual a 0, mas esqueceram de colocar essa condi\u00e7\u00e3o. Voc\u00ea deve criar uma solu\u00e7\u00e3o para inativar automagicamente as unidades que estiverem sem vida. Para mostrar os dados do jogo no painel, o sistema esperava que existisse uma \"tabela\" com nome \"status_por_jogador\" que deve trazer a quantidade de unidades ativas, a quantidade de constru\u00e7\u00f5es ativas e a quantidade dos recursos ouro e madeira que o usu\u00e1rio possui. Corrija esse problema sem usar joins. O mesmo problema que ocorria com as unidades est\u00e1 ocorrendo com as constru\u00e7\u00f5es, elas n\u00e3o est\u00e3o sendo removidas (inativadas) quando sua vida est\u00e1 abaixo de 0. Corrija esse problema. Em testes, perceberam que o sistema n\u00e3o est\u00e1 impedindo que unidades sejam criadas, mesmo que o usu\u00e1rio n\u00e3o possua os recursos necess\u00e1rios para cria-las (na tabela tipos_unidades tem a quantidade de recursos necess\u00e1rios para cada uma). Verifique se o usu\u00e1rio possui os recursos necess\u00e1rios e impe\u00e7a a cria\u00e7\u00e3o da unidade caso n\u00e3o tenha. Ap\u00f3s criar uma unidade, o sistema n\u00e3o est\u00e1 removendo os recursos do usu\u00e1rio (dinheiro infinito). Para resolver isso, crie alguma solu\u00e7\u00e3o que ap\u00f3s a cria\u00e7\u00e3o da unidade, remova os recursos do jogador (lan\u00e7ando entradas em recursos com valores negativos).","title":"Revis\u00e3o para prova"},{"location":"ADS/2022/BD2/13%20-%20revisao_prova/#revisao-para-prova","text":"Depois de muito estudo, voc\u00ea conseguiu um est\u00e1gio no promissor est\u00fadio de jogos GamesSoft do Bill Port\u00f5es e est\u00e1 trabalhando junto a um time de jovens estagi\u00e1rios promissores para entregar o primeiro e disruptivo jogo dessa empresa, o Empire of Ages. No dia da estreia do jogo, inadi\u00e1vel pois a empresa gastou 1000 reais em marketing, descobriram que os estagi\u00e1rios do teste estavam vendo Naruto no hor\u00e1rio de servi\u00e7o, e n\u00e3o testando o jogo. Assim, foram descobertos diversos erros no jogo, a maioria facilmente corrig\u00edveis pelo c\u00f3digo. Mas a vida \u00e9 uma caixinha de surpresas, e os estagi\u00e1rios que sabiam como fazer o deploy do sistema foram em um Happy Hour no dia anterior e n\u00e3o est\u00e3o em condi\u00e7\u00f5es de trabalhar. Nesse caos, sobrou para o estagi\u00e1rio que mexe com o banco, no caso voc\u00ea, salvar o dia. As corre\u00e7\u00f5es devem ser realizadas direto no banco com triggers e views. A sua promo\u00e7\u00e3o para estagi\u00e1rio S\u00eanior, o futuro da GamesSoft e uma pizza grande de sabores promocionais est\u00e3o na sua m\u00e3o. PS: Bill Port\u00f5es nunca entendeu os joins, por isso ele os acha ruins. Voc\u00ea n\u00e3o pode utilizar joins nas suas solu\u00e7\u00f5es.","title":"Revis\u00e3o para prova"},{"location":"ADS/2022/BD2/13%20-%20revisao_prova/#banco","text":"Para essa aula, vamos utilizar o banco empire_ages.sql ). Olhe a defini\u00e7\u00e3o dele e resolva as quest\u00f5es a seguir. Ele cont\u00e9m um usu\u00e1rio, seus recursos, suas unidades e suas constru\u00e7\u00f5es.","title":"Banco"},{"location":"ADS/2022/BD2/13%20-%20revisao_prova/#primeira-lista-de-correcoes","text":"Uma unidade viva deve estar com o ativo como true e uma unidade que foi derrotada deve estar com o ativo como falso. O sistema deveria tornar inativa qualquer unidade com vida menor ou igual a 0, mas esqueceram de colocar essa condi\u00e7\u00e3o. Voc\u00ea deve criar uma solu\u00e7\u00e3o para inativar automagicamente as unidades que estiverem sem vida. Para mostrar os dados do jogo no painel, o sistema esperava que existisse uma \"tabela\" com nome \"status_por_jogador\" que deve trazer a quantidade de unidades ativas, a quantidade de constru\u00e7\u00f5es ativas e a quantidade dos recursos ouro e madeira que o usu\u00e1rio possui. Corrija esse problema sem usar joins. O mesmo problema que ocorria com as unidades est\u00e1 ocorrendo com as constru\u00e7\u00f5es, elas n\u00e3o est\u00e3o sendo removidas (inativadas) quando sua vida est\u00e1 abaixo de 0. Corrija esse problema. Em testes, perceberam que o sistema n\u00e3o est\u00e1 impedindo que unidades sejam criadas, mesmo que o usu\u00e1rio n\u00e3o possua os recursos necess\u00e1rios para cria-las (na tabela tipos_unidades tem a quantidade de recursos necess\u00e1rios para cada uma). Verifique se o usu\u00e1rio possui os recursos necess\u00e1rios e impe\u00e7a a cria\u00e7\u00e3o da unidade caso n\u00e3o tenha. Ap\u00f3s criar uma unidade, o sistema n\u00e3o est\u00e1 removendo os recursos do usu\u00e1rio (dinheiro infinito). Para resolver isso, crie alguma solu\u00e7\u00e3o que ap\u00f3s a cria\u00e7\u00e3o da unidade, remova os recursos do jogador (lan\u00e7ando entradas em recursos com valores negativos).","title":"Primeira lista de corre\u00e7\u00f5es."},{"location":"ADS/2022/Seguranca/atividade_hash/","text":"Atividade Hash Vamos validar um \"bloco de transa\u00e7\u00e3o\" utilizando o algoritmo de prova de trabalho com o SHA256. Para isso, vamos encontrar um n\u00famero que concatenado(como string) com o seu nome completo tenha um hash que inicie com uma quantidade de zeros. Por exemplo, encontrei que o n\u00famero 8472522 concatenado com o meu nome (\"Pedro Senna de Campos8472522\") gera o hash 0000000B475702A3472F2449A3B390F50BAF807C2C92358F852E76B429C4A76E , que come\u00e7a com 7 zeros (como esse valor \u00e9 em hexa, temos, no m\u00ednimo, 28 bits zeros no in\u00edcio desse hash). Essa atividade deve ser resolvida da for\u00e7a bruta com um programa seguindo os seguintes par\u00e2metros: O c\u00f3digo deve ser em Java, Python, PHP ou ShellScript Voc\u00ea deve encontrar um n\u00famero que, concatenado com o seu nome, tenha 8 zeros no in\u00edcio do HASH gerado pelo SHA256 na representa\u00e7\u00e3o em hexadecimal (32 bits se alguem for fazer em bin\u00e1rio). Devem ser enviados no classroom o c\u00f3digo fonte e um arquivo de texto com o seu nome concatenado com o n\u00famero, a quantidade de tentativas que foram necess\u00e1rias e o tempo que levou para encontrar o n\u00famero. Pseudo c\u00f3digo A solu\u00e7\u00e3o vai ser na for\u00e7a bruta. Escolhe um n\u00famero (pode ser sequencial, aleat\u00f3rio, ...) Concatena o n\u00famero com o seu nome Gera o hash Verifica se o hash come\u00e7a com a quantidade de zeros desejada Em caso negativo, volte para o passo 1 C\u00f3digo em Java C\u00f3digo em java para gerar os SHA256. import java.security.MessageDigest; import java.security.NoSuchAlgorithmException; import java.nio.charset.StandardCharsets; class provaDeTrabalho { public static void main(String[] args) { String nome = \"Seu nome completo\"; try { System.out.println(getSHA256(nome)); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } } public static String convertByteToHexadecimal(byte[] byteArray) { int len = byteArray.length; // storing the hexadecimal values char[] hexValues = \"0123456789ABCDEF\".toCharArray(); char[] hexCharacter = new char[len * 2]; // using byte operation converting byte // array to hexadecimal value for (int i = 0; i < len; i++) { int v = byteArray[i] & 0xFF; hexCharacter[i * 2] = hexValues[v >>> 4]; hexCharacter[i * 2 + 1] = hexValues[v & 0x0F]; } return String.valueOf(hexCharacter); } public static String getSHA256(String input) throws NoSuchAlgorithmException{ MessageDigest md = MessageDigest.getInstance(\"SHA-256\"); return convertByteToHexadecimal(md.digest(input.getBytes(StandardCharsets.UTF_8))); } } Dicas Teste com n\u00fameros pequenos de 0s no in\u00edcio, 1 por exemplo, antes de colocar para rodar com o valor do exerc\u00edcio. Pode demorar para encontrar o n\u00famero, n\u00e3o deixe para a \u00faltima hora. Teste o hash gerado nesse site . No meu caso, o resultado foi \"Pedro Senna de Campos6579364204\" e voc\u00eas podem testar e ver que o hash come\u00e7a com 8 zeros na representa\u00e7\u00e3o em hexa. Usem Long .","title":"Atividade Hash"},{"location":"ADS/2022/Seguranca/atividade_hash/#atividade-hash","text":"Vamos validar um \"bloco de transa\u00e7\u00e3o\" utilizando o algoritmo de prova de trabalho com o SHA256. Para isso, vamos encontrar um n\u00famero que concatenado(como string) com o seu nome completo tenha um hash que inicie com uma quantidade de zeros. Por exemplo, encontrei que o n\u00famero 8472522 concatenado com o meu nome (\"Pedro Senna de Campos8472522\") gera o hash 0000000B475702A3472F2449A3B390F50BAF807C2C92358F852E76B429C4A76E , que come\u00e7a com 7 zeros (como esse valor \u00e9 em hexa, temos, no m\u00ednimo, 28 bits zeros no in\u00edcio desse hash). Essa atividade deve ser resolvida da for\u00e7a bruta com um programa seguindo os seguintes par\u00e2metros: O c\u00f3digo deve ser em Java, Python, PHP ou ShellScript Voc\u00ea deve encontrar um n\u00famero que, concatenado com o seu nome, tenha 8 zeros no in\u00edcio do HASH gerado pelo SHA256 na representa\u00e7\u00e3o em hexadecimal (32 bits se alguem for fazer em bin\u00e1rio). Devem ser enviados no classroom o c\u00f3digo fonte e um arquivo de texto com o seu nome concatenado com o n\u00famero, a quantidade de tentativas que foram necess\u00e1rias e o tempo que levou para encontrar o n\u00famero.","title":"Atividade Hash"},{"location":"ADS/2022/Seguranca/atividade_hash/#pseudo-codigo","text":"A solu\u00e7\u00e3o vai ser na for\u00e7a bruta. Escolhe um n\u00famero (pode ser sequencial, aleat\u00f3rio, ...) Concatena o n\u00famero com o seu nome Gera o hash Verifica se o hash come\u00e7a com a quantidade de zeros desejada Em caso negativo, volte para o passo 1","title":"Pseudo c\u00f3digo"},{"location":"ADS/2022/Seguranca/atividade_hash/#codigo-em-java","text":"C\u00f3digo em java para gerar os SHA256. import java.security.MessageDigest; import java.security.NoSuchAlgorithmException; import java.nio.charset.StandardCharsets; class provaDeTrabalho { public static void main(String[] args) { String nome = \"Seu nome completo\"; try { System.out.println(getSHA256(nome)); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } } public static String convertByteToHexadecimal(byte[] byteArray) { int len = byteArray.length; // storing the hexadecimal values char[] hexValues = \"0123456789ABCDEF\".toCharArray(); char[] hexCharacter = new char[len * 2]; // using byte operation converting byte // array to hexadecimal value for (int i = 0; i < len; i++) { int v = byteArray[i] & 0xFF; hexCharacter[i * 2] = hexValues[v >>> 4]; hexCharacter[i * 2 + 1] = hexValues[v & 0x0F]; } return String.valueOf(hexCharacter); } public static String getSHA256(String input) throws NoSuchAlgorithmException{ MessageDigest md = MessageDigest.getInstance(\"SHA-256\"); return convertByteToHexadecimal(md.digest(input.getBytes(StandardCharsets.UTF_8))); } }","title":"C\u00f3digo em Java"},{"location":"ADS/2022/Seguranca/atividade_hash/#dicas","text":"Teste com n\u00fameros pequenos de 0s no in\u00edcio, 1 por exemplo, antes de colocar para rodar com o valor do exerc\u00edcio. Pode demorar para encontrar o n\u00famero, n\u00e3o deixe para a \u00faltima hora. Teste o hash gerado nesse site . No meu caso, o resultado foi \"Pedro Senna de Campos6579364204\" e voc\u00eas podem testar e ver que o hash come\u00e7a com 8 zeros na representa\u00e7\u00e3o em hexa. Usem Long .","title":"Dicas"},{"location":"ADS/2022/Topicos/01%20-%20github/","text":"Utilizando o github no VSCode Nessa aula, vamos criar um reposit\u00f3rio no github e o utilizar pelo VSCode. Criando a conta Primeiro vamos criar uma conta no github, quem j\u00e1 possui, v\u00e1 para o pr\u00f3ximo passo. Entre no site github.com . Clique em \"SIGN UP\" na tela inicial e siga os passos para criar a conta. Criando um reposit\u00f3rio Para criarmos um novo reposit\u00f3rio no github, vamos logar na conta e, na p\u00e1gina inicial ( github.com ), clickar em new como na imagem abaixo. Na p\u00e1gina de cria\u00e7\u00e3o, primeiro crie um nome para o reposit\u00f3rio, depois clique em criar reposit\u00f3rio. Depois disso, voc\u00ea ter\u00e1 criado um reposit\u00f3rio p\u00fablico vazio. Agora vamos para o VSCode para baixar esse reposit\u00f3rio na sua m\u00e1quina. Baixando o reposit\u00f3rio para sua m\u00e1quina (git clone) Abra o VSCode e precione ctrl + shist + p. Vai aparecer uma barra na parte superior da tela. Nessa barra, digite \"gitcl\" e escolha a op\u00e7\u00e3o Clonar, como na imagem abaixo. Agora v\u00e1 para o reposit\u00f3rio que voc\u00ea criou no passo anterior, selecione o HTTPS e copie a URL que aparecer, como na imagem abaixo. Cole a URL no menu do VScode como na imagem abaixo e clicke em \"clonar da URL\": Vai aparecer uma janela para escolherem em qual pasta o reposit\u00f3rio deve ser criado. Depois clique em abrir. Adicionando o primeiro c\u00f3digo Crie algum arquivo no reposit\u00f3rio que acabou de criar. Quando quiser adicionar o arquivo no git, clique no menu de controle de vers\u00e3o: Na aba de controle de vers\u00e3o, ecolha os arquivos que deseja mandar para o git clicando no +. Clique no confirmar para criar um commit com os arquivos que foram adicionados. Vai aparecer um campo para escrever a mensagem do commit (dizer o que esse commit est\u00e1 fazendo). O commit est\u00e1 gravado apenas na sua m\u00e1quina, olhe no github e o arquivo novo n\u00e3o vai estar l\u00e1. Para enviar os commit parar o github, vamos escolher a op\u00e7\u00e3o \"enviar por push\". Ele vai pedir para fazer login no github e vai enviar as mudan\u00e7as para o reposit\u00f3rio. Pegando as mudan\u00e7as no reposit\u00f3rio Para pegar as mudan\u00e7as que est\u00e3o no github, clique no bot\u00e3o na barra inferior.","title":"Utilizando o github no VSCode"},{"location":"ADS/2022/Topicos/01%20-%20github/#utilizando-o-github-no-vscode","text":"Nessa aula, vamos criar um reposit\u00f3rio no github e o utilizar pelo VSCode.","title":"Utilizando o github no VSCode"},{"location":"ADS/2022/Topicos/01%20-%20github/#criando-a-conta","text":"Primeiro vamos criar uma conta no github, quem j\u00e1 possui, v\u00e1 para o pr\u00f3ximo passo. Entre no site github.com . Clique em \"SIGN UP\" na tela inicial e siga os passos para criar a conta.","title":"Criando a conta"},{"location":"ADS/2022/Topicos/01%20-%20github/#criando-um-repositorio","text":"Para criarmos um novo reposit\u00f3rio no github, vamos logar na conta e, na p\u00e1gina inicial ( github.com ), clickar em new como na imagem abaixo. Na p\u00e1gina de cria\u00e7\u00e3o, primeiro crie um nome para o reposit\u00f3rio, depois clique em criar reposit\u00f3rio. Depois disso, voc\u00ea ter\u00e1 criado um reposit\u00f3rio p\u00fablico vazio. Agora vamos para o VSCode para baixar esse reposit\u00f3rio na sua m\u00e1quina.","title":"Criando um reposit\u00f3rio"},{"location":"ADS/2022/Topicos/01%20-%20github/#baixando-o-repositorio-para-sua-maquina-git-clone","text":"Abra o VSCode e precione ctrl + shist + p. Vai aparecer uma barra na parte superior da tela. Nessa barra, digite \"gitcl\" e escolha a op\u00e7\u00e3o Clonar, como na imagem abaixo. Agora v\u00e1 para o reposit\u00f3rio que voc\u00ea criou no passo anterior, selecione o HTTPS e copie a URL que aparecer, como na imagem abaixo. Cole a URL no menu do VScode como na imagem abaixo e clicke em \"clonar da URL\": Vai aparecer uma janela para escolherem em qual pasta o reposit\u00f3rio deve ser criado. Depois clique em abrir.","title":"Baixando o reposit\u00f3rio para sua m\u00e1quina (git clone)"},{"location":"ADS/2022/Topicos/01%20-%20github/#adicionando-o-primeiro-codigo","text":"Crie algum arquivo no reposit\u00f3rio que acabou de criar. Quando quiser adicionar o arquivo no git, clique no menu de controle de vers\u00e3o: Na aba de controle de vers\u00e3o, ecolha os arquivos que deseja mandar para o git clicando no +. Clique no confirmar para criar um commit com os arquivos que foram adicionados. Vai aparecer um campo para escrever a mensagem do commit (dizer o que esse commit est\u00e1 fazendo). O commit est\u00e1 gravado apenas na sua m\u00e1quina, olhe no github e o arquivo novo n\u00e3o vai estar l\u00e1. Para enviar os commit parar o github, vamos escolher a op\u00e7\u00e3o \"enviar por push\". Ele vai pedir para fazer login no github e vai enviar as mudan\u00e7as para o reposit\u00f3rio.","title":"Adicionando o primeiro c\u00f3digo"},{"location":"ADS/2022/Topicos/01%20-%20github/#pegando-as-mudancas-no-repositorio","text":"Para pegar as mudan\u00e7as que est\u00e3o no github, clique no bot\u00e3o na barra inferior.","title":"Pegando as mudan\u00e7as no reposit\u00f3rio"}]}